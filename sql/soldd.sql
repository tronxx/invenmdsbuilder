-- *** TABLES ***


CREATE TABLE "SA"."CASAS" (
	"CLAVE" CHAR(4),
	"NOMBRE" CHAR(30));

CREATE UNIQUE INDEX "SA"."CASAS" ON "SA"."CASAS" ("CLAVE");


CREATE TABLE "SA"."POBLACS" (
	"NOMBRE" CHAR(25),
	"NUMERO" SMALLINT);

CREATE UNIQUE INDEX "SA"."POBLACS" ON "SA"."POBLACS" ("NOMBRE");


CREATE TABLE "SA"."DIRCLI" (
	"CODCLI" VARCHAR(10),
	"DIREC2" VARCHAR(30),
	"NOMAV" VARCHAR(35),
	"DIRAV1" VARCHAR(25),
	"DIRAV2" VARCHAR(25),
	"COMPRA" VARCHAR(70),
	"LINEA" VARCHAR(4));

CREATE UNIQUE INDEX "SA"."DIRCLI" ON "SA"."DIRCLI" ("CODCLI");

CREATE INDEX "SA"."AVALCLI" ON "SA"."DIRCLI" ("NOMAV");


CREATE TABLE "SA"."PROMOTOR" (
	"TIENDA" CHAR(2),
	"CLAVE" CHAR(3),
	"NOMBRE" CHAR(30),
	"UBI" CHAR(1),
	"NUMZON" CHAR(2),
	"CVEZON" CHAR(2),
	"POC" CHAR(1),
	"COMLET" FLOAT(15),
	"COMREC" FLOAT(15));


CREATE TABLE "SA"."USUARIOS" (
	"NOMBRE" CHAR(15),
	"CLAVE" CHAR(10),
	"MAESTRO" CHAR(1),
	"NUMPOL" CHAR(2),
	"INICIALES" CHAR(4),
	"PERMI01" CHAR(1),
	"PERMI02" CHAR(1),
	"PERMI03" CHAR(1),
	"PERMI04" CHAR(1),
	"PERMI05" CHAR(1),
	"PERMI06" CHAR(1),
	"PERMI07" CHAR(1),
	"PERMI08" CHAR(1),
	"PERMI09" CHAR(1),
	"PERMI10" CHAR(1),
	"PERMI11" CHAR(1),
	"PERMI12" CHAR(1),
	"PERMI13" CHAR(1),
	"PERMI14" CHAR(1),
	"PERMI15" CHAR(1),
	"PERMI16" CHAR(1),
	"PERMI17" CHAR(1),
	"PERMI18" CHAR(1),
	"PERMI19" CHAR(1),
	"PERMI20" CHAR(1),
	"PERMI21" CHAR(1),
	"PERMI22" CHAR(1),
	"PERMI23" CHAR(1),
	"PERMI24" CHAR(1),
	"PERMI25" CHAR(1),
	"PERMI26" CHAR(1),
	"PERMI27" CHAR(1),
	"PERMI28" CHAR(1),
	"PERMI29" CHAR(1),
	"PERMI30" CHAR(1));


CREATE TABLE "SA"."VENDEDOR" (
	"CODIGO" CHAR(3),
	"NOMBRE" CHAR(20));

CREATE UNIQUE INDEX "SA"."VENDEDOR" ON "SA"."VENDEDOR" ("CODIGO");


CREATE TABLE "SA"."CARTAPRO" (
	"CLAVE" CHAR(1),
	"DESCRI" CHAR(20),
	"ACUM1" CHAR(1),
	"IMPEA" CHAR(1));

CREATE UNIQUE INDEX "SA"."CARTAPRO" ON "SA"."CARTAPRO" ("CLAVE");


CREATE TABLE "SA"."LINEAS" (
	"NUMERO" VARCHAR(4),
	"DESCRI" CHAR(30),
	"ORDEN" CHAR(2),
	"REGION" CHAR(1),
	"CIA" SMALLINT);

CREATE UNIQUE INDEX "SA"."LINEAS" ON "SA"."LINEAS" ("NUMERO");


CREATE TABLE "SA"."CLIENTES" (
	"NUMCLI" CHAR(10),
	"TIENDA" SMALLINT,
	"FECHAVTA" DATE,
	"CONSE" SMALLINT,
	"STATUS" CHAR(1),
	"NOMBRE" CHAR(34),
	"DIREC" CHAR(25),
	"POBLAC" CHAR(25),
	"QOM" CHAR(1),
	"TICTE" CHAR(2),
	"LETRA1" FLOAT(15),
	"ENGANC" FLOAT(15),
	"NULET1" SMALLINT,
	"CANLE1" FLOAT(15),
	"NULET2" SMALLINT,
	"CANLE2" FLOAT(15),
	"BONIFI" FLOAT(15),
	"SERVIC" FLOAT(15),
	"PRECON" FLOAT(15),
	"AGENTE" CHAR(3),
	"FAC" INTEGER,
	"COMISI" FLOAT(15),
	"AGENT2" CHAR(3),
	"OPERAC" CHAR(1),
	"COMIS2" FLOAT(15),
	"CARGOS" FLOAT(15),
	"ABONOS" FLOAT(15),
	"JEFGPO" CHAR(3),
	"MONEDA" CHAR(1),
	"SOLICI" CHAR(1),
	"PGOCOM" CHAR(6),
	"UBIAGE" CHAR(2),
	"JEFPAS" CHAR(6),
	"COJEPA" FLOAT(15),
	"PDSC" FLOAT(15),
	"FECHAL" DATE,
	"ULTMOD" DATE,
	"FECSAL" DATE,
	"PIVA" FLOAT(15),
	"DIACUM" SMALLINT,
	"MESCUM" SMALLINT
);

CREATE INDEX "SA"."CLIENTES" ON "SA"."CLIENTES" ("NUMCLI");

CREATE INDEX "SA"."CLIXFVTA" ON "SA"."CLIENTES" ("FECHAVTA");

CREATE INDEX "SA"."CLIXNOM" ON "SA"."CLIENTES" ("NOMBRE");

CREATE INDEX "SA"."CLIXPOB" ON "SA"."CLIENTES" ("POBLAC","NOMBRE");

CREATE INDEX "SA"."CLIXULCAM" ON "SA"."CLIENTES" ("ULTMOD");


CREATE TABLE "SA"."TIENDAS" (
	"CODIGO" CHAR(2),
	"NOMBRE" CHAR(20),
	"NUMROM" CHAR(5),
	"ORDEN" CHAR(2),
	"ZONCAR" CHAR(2),
	"ACUM" CHAR(1),
	"ZONAMOR" CHAR(1),
	"CAJA" CHAR(2),
	"MUERTA" CHAR(2),
	"FECFIN" DATE);

CREATE UNIQUE INDEX "SA"."TIENDAS" ON "SA"."TIENDAS" ("CODIGO");


CREATE TABLE "SA"."POLIZAS" (
	"FECHA" DATE,
	"TDA" CHAR(2),
	"STATUS" CHAR(1),
	"BONIF" FLOAT(15),
	"RECAR" FLOAT(15),
	"IMPOR" FLOAT(15)
);

CREATE INDEX "SA"."POLIZAS" ON "SA"."POLIZAS" ("FECHA","TDA");


CREATE TABLE "SA"."RECOJAS" (
	"CODCLI" CHAR(10),
	"FECHA" DATE,
	"ADEUDO" FLOAT(15),
	"DEVUEL" CHAR(1),
	"FECDEV" DATE
);

CREATE INDEX "SA"."RECOJAS" ON "SA"."RECOJAS" ("CODCLI");


CREATE TABLE "SA"."COMISCOB" (
	"FECHA" DATE,
	"PROMO" CHAR(3),
	"POLIZA" CHAR(2),
	"ENG" FLOAT(15),
	"IMP" FLOAT(15),
	"BON" FLOAT(15),
	"REC" FLOAT(15),
	"COM" FLOAT(15),
	"REL" FLOAT(15),
	"RECIB" FLOAT(15),
	"CAMBI" FLOAT(15)
);

CREATE INDEX "SA"."COMISCOB" ON "SA"."COMISCOB" ("FECHA","PROMO","POLIZA");


CREATE TABLE "SA"."LITIGIO" (
	"CODIGO" CHAR(10),
	"FECHA" DATE,
	"STATUS" CHAR(1),
	"ADEUD" FLOAT(15),
	"SALDO" FLOAT(15),
	"LITIGANTE" CHAR(30)
);

CREATE INDEX "SA"."LITIGIO" ON "SA"."LITIGIO" ("CODIGO");

CREATE INDEX "SA"."LITXFEC" ON "SA"."LITIGIO" ("FECHA");


CREATE TABLE "SA"."ALMACEN" (
	"CLAVE" VARCHAR(4),
	"NOMBRE" CHAR(30),
	"DIREC" CHAR(50),
	"SDOINI" FLOAT(15),
	"IMPENT" FLOAT(15),
	"IMPSAL" FLOAT(15),
	"SDOFIN" FLOAT(15),
	"CIA" SMALLINT,
	"ORDIARY" SMALLINT,
	"EXIB" VARCHAR(1),
	"ZONA" VARCHAR(2),
	"ORDTABT" SMALLINT);


CREATE TABLE "SA"."RENFAC" (
	"NUMFAC" INTEGER,
	"RENFAC" SMALLINT,
	"CODIGO" CHAR(12),
	"DESCRI" CHAR(30),
	"SERIES" CHAR(1),
	"CANTI" FLOAT(15),
	"PRECIOU" FLOAT(15),
	"PORDES" FLOAT(15),
	"PORIVA" FLOAT(15),
	"IMPORTE" FLOAT(15),
	"DESCTO" FLOAT(15),
	"SUBTOT" FLOAT(15),
	"IVA" FLOAT(15),
	"TOTAL" FLOAT(15)
);

CREATE INDEX "SA"."RENFAC" ON "SA"."RENFAC" ("NUMFAC");


CREATE TABLE "SA"."FLUJOEFE" (
	"COD" CHAR(2),
	"DIAS" INTEGER,
	"SIGNO" CHAR(1),
	"IMPORTE" FLOAT(15));


CREATE TABLE "SA"."POLSER" (
	"FECHA" DATE,
	"TDA" VARCHAR(4),
	"STATUS" CHAR(1),
	"USUARIO" CHAR(20)
);

CREATE INDEX "SA"."POLSER" ON "SA"."POLSER" ("FECHA","TDA");


CREATE TABLE "SA"."RENPOSER" (
	"FECHA" DATE,
	"TDA" CHAR(4),
	"CONSE" SMALLINT,
	"REPORTE" INTEGER,
	"MOVTO" CHAR(1),
	"OBSERV" CHAR(20),
	"TOP" CHAR(1),
	"NOMAT" CHAR(20),
	"ATIE2" CHAR(3),
	"ZONA" CHAR(2),
	"UBICA" SMALLINT
);

CREATE INDEX "SA"."MOVREP" ON "SA"."RENPOSER" ("REPORTE");

CREATE INDEX "SA"."RENPNREP" ON "SA"."RENPOSER" ("REPORTE");

CREATE INDEX "SA"."RENPOSER" ON "SA"."RENPOSER" ("FECHA","TDA");


CREATE TABLE "SA"."REPORTES" (
	"UBICA" SMALLINT,
	"NUMERO" INTEGER,
	"CODCLI" CHAR(10),
	"CLIENTE" CHAR(35),
	"FECHA" DATE,
	"ARTIC" CHAR(30),
	"SERIE" CHAR(10),
	"SINTOM1" CHAR(60),
	"SINTOM2" CHAR(60),
	"DIRCLI" CHAR(35),
	"POBLA" CHAR(25),
	"CARGO" CHAR(1),
	"IMPORTE" FLOAT(15),
	"STATUS" CHAR(1),
	"FECRES" DATE,
	"CCARMDS" CHAR(1),
	"CARMDS" FLOAT(15),
	"OBSER1" CHAR(60),
	"CLIALM" CHAR(1),
	"TALLER" CHAR(1),
	"FECTAL" DATE,
	"VISIT1" CHAR(1),
	"FEVIS1" DATE,
	"RESVI1" CHAR(20),
	"VISIT2" CHAR(1),
	"FEVIS2" DATE,
	"RESVI2" CHAR(20),
	"VISIT3" CHAR(1),
	"FEVIS3" DATE,
	"RESVI3" CHAR(20),
	"SITUAC" CHAR(1),
	"DEVOLT" CHAR(1),
	"FECDVT" DATE,
	"RECOGI" CHAR(1),
	"FECREC" DATE,
	"OBSREC" CHAR(20),
	"ARTSER" CHAR(1),
	"DESARS" CHAR(30),
	"LINEA" CHAR(4),
	"DIIASE" CHAR(1),
	"OBSOLU" CHAR(20),
	"TALSER" CHAR(2),
	"PROM2" CHAR(3)
);

CREATE INDEX "SA"."REPORTES" ON "SA"."REPORTES" ("UBICA","NUMERO");

CREATE INDEX "SA"."REPXCOD" ON "SA"."REPORTES" ("CODCLI");

CREATE INDEX "SA"."REPXFEC" ON "SA"."REPORTES" ("FECHA");

CREATE INDEX "SA"."REPXNOM" ON "SA"."REPORTES" ("CLIENTE");


CREATE TABLE "SA"."SITREP" (
	"CLAVE" CHAR(1),
	"DESCRI" CHAR(15));


CREATE TABLE "SA"."TALLSER" (
	"CLAVE" CHAR(3),
	"NOMBRE" CHAR(50),
	"REPRE" CHAR(50),
	"DIREC" CHAR(50),
	"TEL" CHAR(20),
	"MARCA" CHAR(50));


CREATE TABLE "SA"."CANCEL" (
	"FECHA" DATE,
	"CODCLI" CHAR(10),
	"IMPOR" FLOAT(15),
	"DEVOL" FLOAT(15),
	"ADEUD" FLOAT(15),
	"FOC" CHAR(1)
);

CREATE INDEX "SA"."CANCEL" ON "SA"."CANCEL" ("FECHA");

CREATE INDEX "SA"."CANXCOD" ON "SA"."CANCEL" ("CODCLI");


CREATE TABLE "SA"."UBIVTA" (
	"CODCAR" CHAR(2),
	"UBICA" CHAR(3),
	"NOMBRE" CHAR(30),
	"ZONA" CHAR(2),
	"SUBZON" CHAR(3),
	"TIENDA" SMALLINT);


CREATE TABLE "SA"."RESANALI" (
	"TAREA" INTEGER,
	"COD" SMALLINT,
	"CLICON" SMALLINT,
	"CLICRD" SMALLINT,
	"ENGCTOPL" FLOAT(15),
	"ENGLARPL" FLOAT(15),
	"VTACTOPL" FLOAT(15),
	"VTALARPL" FLOAT(15));


CREATE TABLE "SA"."FONTS" (
	"IMPRE" SMALLINT,
	"NUMERO" SMALLINT,
	"NOMBRE" CHAR(20),
	"NCARS" SMALLINT,
	"SECUEN" CHAR(150));


CREATE TABLE "SA"."CLIALTAS" (
	"NUMCLI" CHAR(10),
	"TIENDA" SMALLINT,
	"FECHAVTA" DATE,
	"CONSE" SMALLINT,
	"STATUS" CHAR(1),
	"NOMBRE" CHAR(34),
	"DIREC" CHAR(25),
	"POBLAC" CHAR(25),
	"QOM" CHAR(1),
	"TICTE" CHAR(2),
	"LETRA1" FLOAT(15),
	"ENGANC" FLOAT(15),
	"NULET1" SMALLINT,
	"CANLE1" FLOAT(15),
	"NULET2" SMALLINT,
	"CANLE2" FLOAT(15),
	"BONIFI" FLOAT(15),
	"SERVIC" FLOAT(15),
	"PRECON" FLOAT(15),
	"AGENTE" CHAR(3),
	"FAC" INTEGER,
	"COMISI" FLOAT(15),
	"AGENT2" CHAR(3),
	"OPERAC" CHAR(1),
	"COMIS2" FLOAT(15),
	"CARGOS" FLOAT(15),
	"ABONOS" FLOAT(15),
	"JEFGPO" CHAR(3),
	"MONEDA" CHAR(1),
	"SOLICI" CHAR(1),
	"PGOCOM" CHAR(6),
	"UBIAGE" CHAR(2),
	"JEFPAS" CHAR(6),
	"COJEPA" FLOAT(15),
	"PDSC" FLOAT(15),
	"FECHAL" DATE,
	"ULTMOD" DATE,
	"FECSAL" DATE,
	"PIVA" FLOAT(15),
	"DIACUM" SMALLINT,
	"MESCUM" SMALLINT);


CREATE TABLE "SA"."REPMORS" (
	"CLAVE" SMALLINT,
	"DESCRI" CHAR(30),
	"ZONA" CHAR(30),
	"NUMZON" SMALLINT,
	"NUMCODS" SMALLINT,
	"CODIS" CHAR(40),
	"PRDIA" SMALLINT,
	"ULDIA" SMALLINT,
	"PRCIU" CHAR(25),
	"ULCIU" CHAR(25),
	"EXCEP1" CHAR(25),
	"EXCEP2" CHAR(25),
	"EXCEP3" CHAR(25));


CREATE TABLE "SA"."MVCLIALTAS" (
	"LLAVE" CHAR(10),
	"FECHAMOV" DATE,
	"COA" CHAR(1),
	"CONCEP1" CHAR(20),
	"POLIZA" CHAR(2),
	"TIPAG" CHAR(2),
	"RECOBON" FLOAT(15),
	"IMPORT" FLOAT(15),
	"OPER" CHAR(3),
	"ACE" CHAR(1),
	"USUARIO" CHAR(2),
	"CONSE" SMALLINT);


CREATE TABLE "SA"."DIRCLIALTAS" (
	"CODCLI" CHAR(10),
	"DIREC2" CHAR(30),
	"NOMAV" CHAR(35),
	"DIRAV1" CHAR(25),
	"DIRAV2" CHAR(25),
	"COMPRA" CHAR(70),
	"LINEA" CHAR(4));


CREATE TABLE "SA"."SOLICALTA" (
	"CODIGO" VARCHAR(10),
	"SEXO" VARCHAR(1),
	"EDAD" SMALLINT,
	"EDOCIV" VARCHAR(1),
	"DEPEND" SMALLINT,
	"OCUPAC" VARCHAR(20),
	"INGRES" FLOAT(15),
	"TRABAJ" VARCHAR(40),
	"TELTRA" VARCHAR(14),
	"DIRTRA" VARCHAR(40),
	"ANUANT" SMALLINT,
	"MESANT" SMALLINT,
	"CONYUG" VARCHAR(25),
	"OCUCON" VARCHAR(20),
	"TRACON" VARCHAR(40),
	"TELTRC" VARCHAR(14),
	"DIRTRC" VARCHAR(40),
	"INGCON" FLOAT(15),
	"ANUANC" SMALLINT,
	"MESANC" SMALLINT,
	"AVAL" VARCHAR(25),
	"OCUAVA" VARCHAR(20),
	"TRAAVA" VARCHAR(40),
	"TELTAV" VARCHAR(14),
	"DIRTAV" VARCHAR(40),
	"INGAVA" FLOAT(15),
	"ANUANA" SMALLINT,
	"MESANA" SMALLINT,
	"CONOCI" VARCHAR(30),
	"DIRCONO" VARCHAR(30),
	"TELCONO" VARCHAR(14),
	"FAMILI" VARCHAR(30),
	"DIRFAMI" VARCHAR(30),
	"TELFAMI" VARCHAR(14),
	"CONYAVA" VARCHAR(25),
	"OCUCONA" VARCHAR(20),
	"TRACONA" VARCHAR(40),
	"TELTRCA" VARCHAR(14),
	"DIRTRCA" VARCHAR(40),
	"INGCONA" FLOAT(15),
	"ANUANCA" SMALLINT,
	"MESANCA" SMALLINT,
	"CASA1" VARCHAR(4),
	"REF1" VARCHAR(65),
	"REF1A" VARCHAR(65),
	"CASA2" VARCHAR(4),
	"REF2" VARCHAR(65),
	"OBSERV" VARCHAR(60),
	"DIRCLI2" VARCHAR(30));


CREATE TABLE "SA"."FACFONALTA" (
	"CODCLI" CHAR(10),
	"FACTUR" CHAR(6),
	"TASA" FLOAT(15),
	"CANTI1" SMALLINT,
	"CONCEP1" CHAR(30),
	"PRECIO1" FLOAT(15),
	"CANTI2" SMALLINT,
	"CONCEP2" CHAR(30),
	"PRECIO2" FLOAT(15),
	"CANTI3" SMALLINT,
	"CONCEP3" CHAR(30),
	"PRECIO3" FLOAT(15),
	"SUBTOT" FLOAT(15),
	"IVA" FLOAT(15),
	"TOTAL" FLOAT(15));


CREATE TABLE "SA"."RENRELCF" (
	"FOLIO" INTEGER,
	"CONSE" SMALLINT,
	"CODCLI" CHAR(10),
	"NOMCLI" CHAR(34),
	"STATCLI" CHAR(1),
	"NUMFON" FLOAT(15),
	"FACTUR" INTEGER,
	"PAGCON" FLOAT(15),
	"PRCON" FLOAT(15),
	"IMPORT" FLOAT(15),
	"IVA" FLOAT(15),
	"COMFON" FLOAT(15),
	"IVACOM" FLOAT(15),
	"TASCOM" FLOAT(15),
	"PAGADO" CHAR(1),
	"PIVACOM" FLOAT(15),
	"FECPOL" DATE,
	"TDA" CHAR(2),
	"FECOB" DATE,
	"NFOTRA" CHAR(15),
	"MOVREL" CHAR(1));


CREATE TABLE "SA"."RELCOBFO" (
	"FOLIO" INTEGER,
	"FECHA" DATE,
	"PAGCON" FLOAT(15),
	"PEDIDO" FLOAT(15),
	"IVA" FLOAT(15),
	"COMISION" FLOAT(15),
	"IVACOM" FLOAT(15),
	"FECAP" DATE,
	"STATUS" CHAR(1),
	"SISTE" CHAR(1));


CREATE TABLE "SA"."LINREP" (
	"NUMERO" CHAR(4),
	"DESCRI" CHAR(30),
	"ORDEN" CHAR(2),
	"REGION" CHAR(1));


CREATE TABLE "SA"."INFSER" (
	"FECHA" DATE,
	"LINEA" CHAR(4),
	"REGION" CHAR(1),
	"RESUEL" SMALLINT,
	"SINACCION" SMALLINT,
	"VISITAD" SMALLINT,
	"ALTALLER" SMALLINT,
	"ENTALLER" SMALLINT,
	"SOLXENT" SMALLINT,
	"TOTDRES" SMALLINT,
	"DIAMEN" SMALLINT,
	"DIAMAY" SMALLINT,
	"TRANSFIN" SMALLINT,
	"TRANSINI" SMALLINT,
	"ENTRARON" SMALLINT,
	"UBICA" SMALLINT);


CREATE TABLE "SA"."ACUVEND" (
	"FECINI" DATE,
	"FECFIN" DATE,
	"CODIGO" CHAR(3),
	"VOC" CHAR(1),
	"NOMBRE" CHAR(20),
	"VTAFON" FLOAT(15),
	"COMFON" FLOAT(15),
	"VTAPRCON" FLOAT(15),
	"VTAPRCRD" FLOAT(15),
	"PORCEN2" FLOAT(15),
	"TOTNO" FLOAT(15),
	"TOTSI" FLOAT(15),
	"CONTADO" FLOAT(15),
	"CONTCOM" FLOAT(15),
	"MESES05" FLOAT(15),
	"MESES06" FLOAT(15),
	"MESES08" FLOAT(15),
	"MESES10" FLOAT(15),
	"MESES13" FLOAT(15),
	"CLIENPC" FLOAT(15),
	"CLIENAR" FLOAT(15),
	"CLIENCR" FLOAT(15),
	"CREDSI" FLOAT(15),
	"CREDNO" FLOAT(15),
	"COSTOVTAS" FLOAT(15),
	"COMISION" FLOAT(15),
	"SERVIC" FLOAT(15),
	"COMCA" FLOAT(15),
	"COMPI" FLOAT(15));


CREATE TABLE "SA"."ZONAS" (
	"ZONA" CHAR(2),
	"NOMBRE" CHAR(30));


CREATE TABLE "SA"."INFACUPO" (
	"FECINI" DATE,
	"FECFIN" DATE,
	"ZONCAR" CHAR(2),
	"POL" CHAR(2),
	"COD" CHAR(2),
	"TASAIVA" CHAR(5),
	"IMPOR" FLOAT(15),
	"BONIF" FLOAT(15),
	"RECAR" FLOAT(15),
	"DOCBON" FLOAT(15),
	"DOCREC" FLOAT(15),
	"ACTNET" FLOAT(15),
	"SDOENG" FLOAT(15),
	"DOCBMEDOCE" FLOAT(15),
	"DOCRMADOCE" FLOAT(15),
	"DOCCPL" FLOAT(15),
	"DOCLPL" FLOAT(15),
	"SALDADOS" SMALLINT,
	"SDOSPRLIS" FLOAT(15));


CREATE TABLE "SA"."ACUMPOB" (
	"POBLAC" CHAR(25),
	"MES" SMALLINT,
	"ANU" SMALLINT,
	"COA" CHAR(1),
	"PRLISCA" FLOAT(15),
	"PRLISPI" FLOAT(15),
	"PRLISFN" FLOAT(15),
	"TOTFACA" FLOAT(15),
	"TOTFAPI" FLOAT(15),
	"TOTFAFN" FLOAT(15),
	"PRLISCN" FLOAT(15),
	"TOTFACN" FLOAT(15));


CREATE TABLE "SA"."RESCAR" (
	"FECHA" DATE,
	"COD" CHAR(2),
	"TASA" FLOAT(15),
	"CARTSI" FLOAT(15),
	"CARTNO" FLOAT(15),
	"CARTNO05" FLOAT(15),
	"CARTNO06" FLOAT(15),
	"CARTNO08" FLOAT(15),
	"CARTNO10" FLOAT(15),
	"CARTNO11" FLOAT(15),
	"CORTPLSI" FLOAT(15),
	"LARGPLSI" FLOAT(15),
	"CORTPLNO" FLOAT(15),
	"LARGPLNO" FLOAT(15),
	"CLICP" SMALLINT,
	"CLILP" SMALLINT);


CREATE TABLE "SA"."ULTIMREP" (
	"UBICA" SMALLINT,
	"ULTIREP" INTEGER);


CREATE TABLE "SA"."EDORESCAR" (
	"FECHA" DATE,
	"TASIVA" FLOAT(15),
	"COD" CHAR(2),
	"VTASCTOPL" FLOAT(15),
	"VTASLARPL" FLOAT(15),
	"ENGCTOPL" FLOAT(15),
	"ENGLGOPL" FLOAT(15),
	"POLIZASCTOPL" FLOAT(15),
	"POLIZASLARPL" FLOAT(15),
	"CANCELCTOPL" FLOAT(15),
	"CANCELLARPL" FLOAT(15),
	"INCOBCTOPL" FLOAT(15),
	"INCOBLARPL" FLOAT(15),
	"TOTCARCTOPL" FLOAT(15),
	"TOTCARLARPL" FLOAT(15),
	"CLIVIG" SMALLINT,
	"CLISDOS" SMALLINT,
	"CLICRDCA" SMALLINT,
	"CLICRDPI" SMALLINT,
	"CLICANCA" SMALLINT,
	"CLICANPI" SMALLINT,
	"VIGPRLIS" FLOAT(15),
	"CLISDPRLIS" FLOAT(15));


CREATE TABLE "SA"."CARTERAS" (
	"CODCAR" CHAR(2),
	"CODCLI" CHAR(2),
	"ZONA" CHAR(2),
	"PIVA" FLOAT(15));


CREATE TABLE "SA"."INDREP" (
	"TIPO" CHAR(1),
	"UBICA" SMALLINT,
	"NUMREP" INTEGER,
	"LINEA" CHAR(4));


CREATE TABLE "SA"."RUTAS" (
	"DIA" CHAR(1),
	"DESCRI" CHAR(15),
	"PROMO" CHAR(3));


CREATE TABLE "SA"."INFEDOCLI" (
	"FECINI" DATE,
	"FECFIN" DATE,
	"ZONCAR" CHAR(2),
	"POL" CHAR(2),
	"COD" CHAR(2),
	"TASAIVA" CHAR(5),
	"SALDADOS" SMALLINT,
	"SDOSPRLIS" FLOAT(15));


CREATE TABLE "SA"."PRESUP" (
	"ANU" SMALLINT,
	"MES" SMALLINT,
	"ZONA" CHAR(2),
	"SUBZONA" CHAR(3),
	"VTAPRES" FLOAT(15),
	"VTAFONP" FLOAT(15),
	"VTAANUA" FLOAT(15),
	"ANAUFON" FLOAT(15));


CREATE TABLE "SA"."INFMOR" (
	"ZONA" SMALLINT,
	"NUMREP" SMALLINT,
	"COD" SMALLINT,
	"FECHA" DATE,
	"LITIGIO" CHAR(1),
	"DE00A30" FLOAT(15),
	"DE31A60" FLOAT(15),
	"DE61A99" FLOAT(15),
	"CLIENTES" SMALLINT,
	"DOCVENC" SMALLINT,
	"DIASMOR" FLOAT(15));


CREATE TABLE "SA"."CIAS" (
	"NOMBRE" CHAR(35),
	"DIREC" CHAR(50));


CREATE TABLE "SA"."EDOFON" (
	"FECINI" DATE,
	"FECFIN" DATE,
	"VENTAS" FLOAT(15),
	"ABOMDS" FLOAT(15),
	"ABOFON" FLOAT(15),
	"PAGFON" FLOAT(15),
	"COMFON" FLOAT(15),
	"CANCEL" FLOAT(15),
	"SALDO" FLOAT(15));


CREATE TABLE "SA"."INFMORPO" (
	"FECHA" DATE,
	"POBLAC" CHAR(25),
	"COD" SMALLINT,
	"IMPA1" FLOAT(15),
	"IMPA2" FLOAT(15),
	"IMPA3" FLOAT(15),
	"LITIGIO" CHAR(1));


CREATE TABLE "SA"."TIPOL" (
	"TIPO" VARCHAR(3),
	"DESCRI" VARCHAR(15));


CREATE TABLE "SA"."POLIZCON" (
	"TIPO" VARCHAR(3),
	"NUMPOL" SMALLINT,
	"FECHA" DATE,
	"ANU" SMALLINT,
	"MES" SMALLINT,
	"CIA" SMALLINT
);

CREATE INDEX "SA"."POLIZCON" ON "SA"."POLIZCON" ("TIPO","NUMPOL");

CREATE INDEX "SA"."POLIZCONXFEC" ON "SA"."POLIZCON" ("FECHA");


CREATE TABLE "SA"."ASIENTOSCON" (
	"TIPOL" VARCHAR(3),
	"NUMPOL" SMALLINT,
	"NUMASI" SMALLINT,
	"NIVELES" SMALLINT,
	"NIVEL1" SMALLINT,
	"NIVEL2" SMALLINT,
	"NIVEL3" SMALLINT,
	"NIVEL4" SMALLINT,
	"NIVEL5" SMALLINT,
	"CONCEP" INTEGER,
	"CARABO" VARCHAR(1),
	"IMPORTE" FLOAT(15),
	"ANU" SMALLINT,
	"MES" SMALLINT,
	"FECHA" DATE,
	"CIA" SMALLINT
);

CREATE INDEX "SA"."ASXNIV" ON "SA"."ASIENTOSCON" ("NIVEL1","NIVEL2","NIVEL3","NIVEL4","NIVEL5","FECHA");

CREATE INDEX "SA"."IDNP_ASIENTOS" ON "SA"."ASIENTOSCON" ("TIPOL","NUMPOL");


CREATE TABLE "SA"."CUENTAS" (
	"NIVELES" SMALLINT,
	"NIVEL1" SMALLINT,
	"NIVEL2" SMALLINT,
	"NIVEL3" SMALLINT,
	"NIVEL4" SMALLINT,
	"NIVEL5" SMALLINT,
	"NOMBRE" VARCHAR(30),
	"SIGNO" VARCHAR(1),
	"NATUR" VARCHAR(1),
	"DEPEND" VARCHAR(1),
	"MIUNION" INTEGER,
	"SDOINI" FLOAT(15),
	"CARGOS" FLOAT(15),
	"ABONOS" FLOAT(15),
	"CIA" SMALLINT
);

CREATE INDEX "SA"."CUENTAS" ON "SA"."CUENTAS" ("NIVEL1","NIVEL2","NIVEL3","NIVEL4","NIVEL5");


CREATE TABLE "SA"."CTAMES" (
	"NIVEL" SMALLINT,
	"NIV1" SMALLINT,
	"NIV2" SMALLINT,
	"NIV3" SMALLINT,
	"NIV4" SMALLINT,
	"NIV5" SMALLINT,
	"MES" SMALLINT,
	"ANU" SMALLINT,
	"CARGOS" FLOAT(15),
	"ABONOS" FLOAT(15),
	"CIA" SMALLINT);


CREATE TABLE "SA"."CONSECONTA" (
	"NUMTIP" SMALLINT,
	"DESCRI" VARCHAR(40),
	"ULTIMO" INTEGER,
	"CIA" SMALLINT);


CREATE TABLE "SA"."CONSEINV" (
	"NUMTIP" SMALLINT,
	"ALM" VARCHAR(4),
	"DESCRI" VARCHAR(40),
	"ULTIMO" INTEGER,
	"CIA" SMALLINT);


CREATE TABLE "SA"."CIASINV" (
	"CIA" SMALLINT,
	"RAZON" VARCHAR(70),
	"DIR" VARCHAR(70),
	"DIR2" VARCHAR(70),
	"NOMFIS" VARCHAR(70),
	"TEL" VARCHAR(30),
	"FAX" VARCHAR(30),
	"RFC" VARCHAR(15));


CREATE TABLE "SA"."ENTRADAS" (
	"TIPO" CHAR(1),
	"ALM" VARCHAR(4),
	"RECEMI" VARCHAR(4),
	"NUMERO" SMALLINT,
	"FACPRO" VARCHAR(10),
	"PROVE" VARCHAR(4),
	"PERENVREC" INTEGER,
	"STATUS" CHAR(1),
	"CONIVA" CHAR(1),
	"FECHA" DATE,
	"IMPORTE" FLOAT(15),
	"IVA" FLOAT(15),
	"TOTAL" FLOAT(15),
	"VENCE" DATE,
	"CTOFIN" FLOAT(15),
	"TASCOMP" FLOAT(15),
	"TASPRO" FLOAT(15),
	"FECHAFAC" DATE,
	"LETRAS" SMALLINT,
	"PLAZOCFP" CHAR(1),
	"PLANP" INTEGER,
	"FLETES" FLOAT(15),
	"DESXAP" FLOAT(15),
	"FECHAPRP" DATE,
	"CTOFINCOMP" FLOAT(15),
	"USUARIO" VARCHAR(4),
	"CIA" SMALLINT
);

CREATE INDEX "SA"."ENTRADAS" ON "SA"."ENTRADAS" ("TIPO","ALM","NUMERO");

CREATE INDEX "SA"."ENTRADAS_X_FEC" ON "SA"."ENTRADAS" ("TIPO","FECHA","CIA");

CREATE INDEX "SA"."ENTRAXFEC" ON "SA"."ENTRADAS" ("TIPO","FECHA");


CREATE TABLE "SA"."RENENTRA" (
	"TIPO" CHAR(1),
	"ALM" VARCHAR(4),
	"RECEMI" VARCHAR(4),
	"NUMERO" SMALLINT,
	"CONSE" SMALLINT,
	"CODINV" VARCHAR(13),
	"SERIE" VARCHAR(20),
	"SIONO" CHAR(1),
	"FOLSAL" INTEGER,
	"FOLENT" INTEGER,
	"UNIDS" FLOAT(15),
	"COSTOU" FLOAT(15),
	"PIVA" FLOAT(15),
	"IMPORTE" FLOAT(15),
	"CANTMUEVE" FLOAT(15),
	"STATUS" CHAR(1),
	"PERSENVREC" INTEGER,
	"CIA" SMALLINT,
	"VEND" VARCHAR(3),
	"POBLAC" SMALLINT,
	"TIPAGO" VARCHAR(1),
	"PRVTA" FLOAT(15),
	"ENTOSAL" VARCHAR(1),
	"ENTCAN" VARCHAR(1)
);

CREATE INDEX "SA"."INDARDESPRENEN" ON "SA"."RENENTRA" ("CIA","CODINV","TIPO");

CREATE INDEX "SA"."RENENTRA" ON "SA"."RENENTRA" ("TIPO","ALM","NUMERO");


CREATE TABLE "SA"."PLANESP" (
	"CLAVE" SMALLINT,
	"DESCRI" VARCHAR(30),
	"NUMLET" SMALLINT,
	"IVADIS" CHAR(1),
	"NLETIVA" SMALLINT,
	"FECIVA" SMALLINT,
	"PLAZO" SMALLINT,
	"TASA" FLOAT(15),
	"INTSSAL" CHAR(1),
	"FLETEDIS" CHAR(1),
	"LETIVAEMP" CHAR(1),
	"CIA" SMALLINT,
	"LETIVASOL" VARCHAR(1),
	"DSCXAPDIS" VARCHAR(1));


CREATE TABLE "SA"."PROVEEDOR" (
	"CODIGO" VARCHAR(4),
	"NOMBRE" VARCHAR(50),
	"DIREC" VARCHAR(50),
	"CIU" VARCHAR(30),
	"RFC" VARCHAR(15),
	"TEL" VARCHAR(20),
	"CARGOS" FLOAT(15),
	"ABONOS" FLOAT(15),
	"COMPRAANU" FLOAT(15),
	"COMPRAMES" FLOAT(15),
	"LIMITE" FLOAT(15),
	"CONTACTO" VARCHAR(30),
	"ULTMOV" INTEGER,
	"STATUS" CHAR(1),
	"CIA" SMALLINT);


CREATE TABLE "SA"."RENPOLSER" (
	"FECHA" DATE,
	"TDA" CHAR(4),
	"CONSE" SMALLINT,
	"REPORTE" INTEGER,
	"MOVTO" CHAR(1),
	"OBSERV" VARCHAR(20),
	"TOP" CHAR(1),
	"NOMAT" VARCHAR(20),
	"ATIE2" VARCHAR(3),
	"ZONA" VARCHAR(2),
	"UBICA" SMALLINT);


CREATE TABLE "SA"."POLCORR" (
	"FECHA" DATE,
	"CONSE" SMALLINT,
	"ACCION" SMALLINT,
	"CAMPO" SMALLINT,
	"DESCRICAM" VARCHAR(30),
	"NVOVAL" VARCHAR(70),
	"USUARIO" VARCHAR(15));


CREATE TABLE "SA"."EXIST" (
	"CODIGO" VARCHAR(13),
	"ALM" VARCHAR(4),
	"INICIALS" FLOAT(15),
	"ENTCOMS" FLOAT(15),
	"ENTCANS" FLOAT(15),
	"ENTESPS" FLOAT(15),
	"SALVTAS" FLOAT(15),
	"SALFONS" FLOAT(15),
	"SALESPS" FLOAT(15),
	"SALMAYS" FLOAT(15),
	"EXISTES" FLOAT(15),
	"INICIALN" FLOAT(15),
	"ENTCOMN" FLOAT(15),
	"ENTCANN" FLOAT(15),
	"ENTESPN" FLOAT(15),
	"SALVTAN" FLOAT(15),
	"SALFONN" FLOAT(15),
	"SALESPN" FLOAT(15),
	"SALMAYN" FLOAT(15),
	"EXISTEN" FLOAT(15),
	"COSINICIALS" FLOAT(15),
	"COSENTCOMS" FLOAT(15),
	"COSENTCANS" FLOAT(15),
	"COSENTESPS" FLOAT(15),
	"COSSALVTAS" FLOAT(15),
	"COSSALFONS" FLOAT(15),
	"COSSALESPS" FLOAT(15),
	"COSEXISTES" FLOAT(15),
	"COSINICIALN" FLOAT(15),
	"COSENTCOMN" FLOAT(15),
	"COSENTCANN" FLOAT(15),
	"COSENTESPN" FLOAT(15),
	"COSSALVTAN" FLOAT(15),
	"COSSALFONN" FLOAT(15),
	"COSSALESPN" FLOAT(15),
	"COSSALMAYN" FLOAT(15),
	"COSEXISTEN" FLOAT(15),
	"ULTFOL" SMALLINT,
	"CIA" SMALLINT
);

CREATE INDEX "SA"."EXIST" ON "SA"."EXIST" ("CODIGO","ALM");


CREATE TABLE "SA"."INVEN" (
	"CODIGO" VARCHAR(13),
	"COD2" VARCHAR(13),
	"DESCRI" VARCHAR(30),
	"TIPO" VARCHAR(3),
	"PROVE" VARCHAR(4),
	"LINEA" VARCHAR(4),
	"EMPAQE" VARCHAR(10),
	"MINIMO" SMALLINT,
	"MAXIMO" SMALLINT,
	"PRECIO" FLOAT(15),
	"PIVA" FLOAT(15),
	"COSTOS" FLOAT(15),
	"COSTON" FLOAT(15),
	"INICIALS" FLOAT(15),
	"ENTCOMS" FLOAT(15),
	"ENTCANS" FLOAT(15),
	"ENTESPS" FLOAT(15),
	"SALVTAS" FLOAT(15),
	"SALFONS" FLOAT(15),
	"SALESPS" FLOAT(15),
	"SALMAYS" FLOAT(15),
	"EXISTES" FLOAT(15),
	"INICIALN" FLOAT(15),
	"ENTCOMN" FLOAT(15),
	"ENTCANN" FLOAT(15),
	"ENTESPN" FLOAT(15),
	"SALVTAN" FLOAT(15),
	"SALFONN" FLOAT(15),
	"SALESPN" FLOAT(15),
	"SALMAYN" FLOAT(15),
	"EXISTEN" FLOAT(15),
	"COSINICIALS" FLOAT(15),
	"COSENTCOMS" FLOAT(15),
	"COSENTCANS" FLOAT(15),
	"COSENTESPS" FLOAT(15),
	"COSSALVTAS" FLOAT(15),
	"COSSALFONS" FLOAT(15),
	"COSSALESPS" FLOAT(15),
	"COSSALMAYS" FLOAT(15),
	"COSEXISTES" FLOAT(15),
	"COSINICIALN" FLOAT(15),
	"COSENTCOMN" FLOAT(15),
	"COSENTCANN" FLOAT(15),
	"COSENTESPN" FLOAT(15),
	"COSSALVTAN" FLOAT(15),
	"COSSALFONN" FLOAT(15),
	"COSSALESPN" FLOAT(15),
	"COSSALMAYN" FLOAT(15),
	"COSEXISTEN" FLOAT(15),
	"FECALTA" DATE,
	"CIA" SMALLINT,
	"MDS" VARCHAR(1),
	"ELEC" VARCHAR(1),
	"PRECELEC" FLOAT(15)
);

CREATE INDEX "SA"."GRUPOS" ON "SA"."INVEN" ("COD2");

CREATE INDEX "SA"."INVENXLIN" ON "SA"."INVEN" ("LINEA","CODIGO");

CREATE INDEX "SA"."INVEN_X01" ON "SA"."INVEN" ("CODIGO","CIA");


CREATE TABLE "SA"."MOVART" (
	"CODIGO" VARCHAR(13),
	"ALMAC" VARCHAR(4),
	"FOLIO" INTEGER,
	"PROVE" VARCHAR(4),
	"NOMPRO" INTEGER,
	"COMPRO" INTEGER,
	"FACPRO" VARCHAR(10),
	"FECHA" DATE,
	"COSTO" FLOAT(15),
	"SESPE" CHAR(1),
	"MODSAL" CHAR(1),
	"MODENT" CHAR(1),
	"NENTRADA" INTEGER,
	"TIPO" CHAR(1),
	"VIENEDE" VARCHAR(4),
	"FOLVIENE" INTEGER,
	"VAHACIA" VARCHAR(4),
	"FOLREC" INTEGER,
	"PUEBLO" SMALLINT,
	"NUMFAC" INTEGER,
	"SERIEFAC" VARCHAR(2),
	"SALIO" CHAR(1),
	"SMAY" CHAR(1),
	"FECHASAL" DATE,
	"CANTI" SMALLINT,
	"SERIE" VARCHAR(20),
	"SALVTA" CHAR(1),
	"ENTCAN" CHAR(1),
	"NSALIDA" INTEGER,
	"ENTRAPOR" SMALLINT,
	"SALEPOR" SMALLINT,
	"FECENTORI" DATE,
	"FECVENCTO" DATE,
	"USUARIO" VARCHAR(4),
	"CIA" SMALLINT,
	"PTVTA" VARCHAR(4),
	"VEND" VARCHAR(3)
);

CREATE INDEX "SA"."MOVART" ON "SA"."MOVART" ("CODIGO","ALMAC");


CREATE TABLE "SA"."ESTADIS" (
	"TIPO" SMALLINT,
	"CODIGO" VARCHAR(13),
	"ALM" VARCHAR(4),
	"ANU" SMALLINT,
	"MES" SMALLINT,
	"UNIDADES" SMALLINT,
	"IMPORTE" FLOAT(15),
	"CIA" SMALLINT
);

CREATE INDEX "SA"."ESTADIS" ON "SA"."ESTADIS" ("CODIGO","TIPO","ALM","ANU","CIA");


CREATE TABLE "SA"."MVENTPAG" (
	"PROVE" VARCHAR(4),
	"ENTRADA" SMALLINT,
	"FECHA" DATE,
	"PAGARE" SMALLINT,
	"CONSE" SMALLINT,
	"TPMOV" VARCHAR(1),
	"TIPO2" VARCHAR(1),
	"CONCEP" SMALLINT,
	"VENCE" DATE,
	"CAPITAL" FLOAT(15),
	"INTERES" FLOAT(15),
	"IVA" FLOAT(15),
	"SALDO" FLOAT(15),
	"CFC" FLOAT(15),
	"DESXAP" FLOAT(15),
	"CIA" SMALLINT);


CREATE TABLE "SA"."ENTPAG" (
	"PROVE" VARCHAR(4),
	"NUMERO" SMALLINT,
	"FECHA" DATE,
	"FACPRO" VARCHAR(10),
	"FECENTRA" DATE,
	"TASACFC" FLOAT(15),
	"IMPORTE" FLOAT(15),
	"TOTAL" FLOAT(15),
	"CTOFINENT" FLOAT(15),
	"IVACFCENT" FLOAT(15),
	"CAPITAL" FLOAT(15),
	"LETRAS" SMALLINT,
	"IVA" FLOAT(15),
	"IVAINT" FLOAT(15),
	"PORIVA" FLOAT(15),
	"TASAPRO" FLOAT(15),
	"PLAZO" SMALLINT,
	"SDOCAP" FLOAT(15),
	"PAGCAP" FLOAT(15),
	"PAGINT" FLOAT(15),
	"TOTALINTER" FLOAT(15),
	"PAGOS" FLOAT(15),
	"PAGIVA" FLOAT(15),
	"TASMEN" VARCHAR(1),
	"PLANP" SMALLINT,
	"DESCXAP" FLOAT(15),
	"FECPRP" DATE,
	"FECULP" DATE,
	"FLETES" FLOAT(15),
	"CIA" SMALLINT,
	"FECSAL" DATE);


CREATE TABLE "SA"."PTOVTA" (
	"CLAVE" VARCHAR(4),
	"NOMBRE" VARCHAR(30),
	"DIREC" VARCHAR(50),
	"SDOINI" FLOAT(15),
	"IMPENT" FLOAT(15),
	"IMPSAL" FLOAT(15),
	"SDOFIN" FLOAT(15),
	"CIA" SMALLINT,
	"ORDIARY" SMALLINT
);

CREATE INDEX "SA"."PTOVTA_X01" ON "SA"."PTOVTA" ("CLAVE");


CREATE TABLE "SA"."MAYORIS" (
	"CODIGO" VARCHAR(4),
	"NOMBRE" VARCHAR(50),
	"DIREC" VARCHAR(50),
	"CIU" VARCHAR(30),
	"RFC" VARCHAR(15),
	"TEL" VARCHAR(20),
	"CARGOS" FLOAT(15),
	"ABONOS" FLOAT(15),
	"COMPRAANU" FLOAT(15),
	"COMPRAMES" FLOAT(15),
	"PDSC" FLOAT(15),
	"ULTMOV" INTEGER,
	"STATUS" CHAR(1),
	"CIA" SMALLINT,
	"NOMPAG1" VARCHAR(40),
	"NOMPAG2" VARCHAR(40),
	"DIRPAG1" VARCHAR(40),
	"DIRPAG2" VARCHAR(40),
	"CIUPAG" VARCHAR(40),
	"NOMBRE2" VARCHAR(50));


CREATE TABLE "SA"."DIRCLISAL" (
	"CODCLI" CHAR(10),
	"DIREC2" CHAR(30),
	"NOMAV" CHAR(35),
	"DIRAV1" CHAR(25),
	"DIRAV2" CHAR(25),
	"COMPRA" CHAR(70),
	"LINEA" CHAR(4));


CREATE TABLE "SA"."CLIENTESAL" (
	"NUMCLI" CHAR(10),
	"TIENDA" SMALLINT,
	"FECHAVTA" DATE,
	"CONSE" SMALLINT,
	"STATUS" CHAR(1),
	"NOMBRE" CHAR(34),
	"DIREC" CHAR(25),
	"POBLAC" CHAR(25),
	"QOM" CHAR(1),
	"TICTE" CHAR(2),
	"LETRA1" FLOAT(15),
	"ENGANC" FLOAT(15),
	"NULET1" SMALLINT,
	"CANLE1" FLOAT(15),
	"NULET2" SMALLINT,
	"CANLE2" FLOAT(15),
	"BONIFI" FLOAT(15),
	"SERVIC" FLOAT(15),
	"PRECON" FLOAT(15),
	"AGENTE" CHAR(3),
	"FAC" INTEGER,
	"COMISI" FLOAT(15),
	"AGENT2" CHAR(3),
	"OPERAC" CHAR(1),
	"COMIS2" FLOAT(15),
	"CARGOS" FLOAT(15),
	"ABONOS" FLOAT(15),
	"JEFGPO" CHAR(3),
	"MONEDA" CHAR(1),
	"SOLICI" CHAR(1),
	"PGOCOM" CHAR(6),
	"UBIAGE" CHAR(2),
	"JEFPAS" CHAR(6),
	"COJEPA" FLOAT(15),
	"PDSC" FLOAT(15),
	"FECHAL" DATE,
	"ULTMOD" DATE,
	"FECSAL" DATE,
	"PIVA" FLOAT(15),
	"DIACUM" SMALLINT,
	"MESCUM" SMALLINT);


CREATE TABLE "SA"."ALMREPS" (
	"CLAVE" VARCHAR(4),
	"NOMBRE" CHAR(30),
	"DIREC" CHAR(50),
	"SDOINI" FLOAT(15),
	"IMPENT" FLOAT(15),
	"IMPSAL" FLOAT(15),
	"SDOFIN" FLOAT(15),
	"CIA" SMALLINT,
	"ORDIARY" SMALLINT);


CREATE TABLE "SA"."INVULCOS" (
	"CODIGO" VARCHAR(14),
	"FECHA" DATE,
	"COSTOS" FLOAT(15),
	"COSTON" FLOAT(15),
	"CIA" SMALLINT
);

CREATE INDEX "SA"."INVULCOS" ON "SA"."INVULCOS" ("CODIGO","FECHA");


CREATE TABLE "SA"."ZONAINV" (
	"ZONA" VARCHAR(2),
	"NOMBRE" VARCHAR(30),
	"TIPO" VARCHAR(1));


CREATE TABLE "SA"."RESULCOSINV" (
	"FECHA" DATE,
	"ZONA" VARCHAR(2),
	"ALM" VARCHAR(4),
	"LINEA" VARCHAR(4),
	"CODIGO" VARCHAR(13),
	"EXISI" SMALLINT,
	"EXINO" SMALLINT,
	"COSTOSI" FLOAT(15),
	"COSTONO" FLOAT(15),
	"IVASI" FLOAT(15),
	"ENTCAN" VARCHAR(1),
	"CIA" SMALLINT
);

CREATE INDEX "SA"."RESULCOSINV_X01" ON "SA"."RESULCOSINV" ("FECHA","LINEA");


CREATE TABLE "SA"."TABTRASP" (
	"ALMENV" VARCHAR(4),
	"ALMREC" VARCHAR(4),
	"ORDENV" SMALLINT,
	"ORDREC" SMALLINT,
	"ZONENV" VARCHAR(2),
	"ZONREC" VARCHAR(2),
	"TOTAL" FLOAT(15));


CREATE TABLE "SA"."UBIVTAINV" (
	"ALM" VARCHAR(4),
	"PVTA" VARCHAR(4),
	"ZONAINV" VARCHAR(2),
	"VOC" VARCHAR(1),
	"ZONA2" VARCHAR(2),
	"PTVTA2" VARCHAR(4),
	"ZONARTDES" VARCHAR(2),
	"ZONAPTVTA" VARCHAR(3),
	"ZONACAR" VARCHAR(2),
	"SUBZONCAR" VARCHAR(3));


CREATE TABLE "SA"."INFENT" (
	"PROVE" VARCHAR(4),
	"COMPRASI" FLOAT(15),
	"COMPRANO" FLOAT(15),
	"COMPRAMES" FLOAT(15),
	"RANK1" SMALLINT,
	"COMPRANU" FLOAT(15),
	"RANK2" SMALLINT,
	"TOTGRAL" FLOAT(15),
	"RANK3" SMALLINT);


CREATE TABLE "SA"."INFCOMPLI" (
	"FECINI" DATE,
	"FECULT" DATE,
	"LINEA" VARCHAR(4),
	"CVTAMEN" FLOAT(15),
	"CVTAMAY" FLOAT(15),
	"CVTAFON" FLOAT(15),
	"COMPRAS" FLOAT(15),
	"DEVCOMP" FLOAT(15),
	"CANCEL" FLOAT(15),
	"CIA" SMALLINT,
	"CVTAFID" FLOAT(15),
	"CVTACEL" FLOAT(15));


CREATE TABLE "SA"."CONCEPS" (
	"CONCEPTO" VARCHAR(30),
	"NCON" INTEGER
);

CREATE INDEX "SA"."CONCEPS" ON "SA"."CONCEPS" ("NCON");

CREATE INDEX "SA"."CONCEPTOS" ON "SA"."CONCEPS" ("CONCEPTO");

CREATE INDEX "SA"."NCONCEP" ON "SA"."CONCEPS" ("NCON");


CREATE TABLE "SA"."PLANESPTMP" (
	"CLAVE" VARCHAR(3),
	"DESCRI" VARCHAR(30),
	"NUMLET" SMALLINT,
	"IVADIS" VARCHAR(1),
	"NLETIVA" SMALLINT,
	"FECIVA" SMALLINT,
	"PLAZO" INTEGER,
	"TASA" FLOAT(15),
	"INTSSAL" VARCHAR(1),
	"FLETE" VARCHAR(1));


CREATE TABLE "SA"."SERIEFACMA" (
	"FACTUR" INTEGER,
	"RENGLON" SMALLINT,
	"CONSEC" SMALLINT,
	"CODINV" VARCHAR(13),
	"SERIE" VARCHAR(20),
	"CIA" SMALLINT);


CREATE TABLE "SA"."MOVMAY" (
	"MAYORIS" VARCHAR(4),
	"DOCTO" INTEGER,
	"CONSE" SMALLINT,
	"FECHA" DATE,
	"VENCE" DATE,
	"CONCEP" INTEGER,
	"COA" VARCHAR(1),
	"IMPORTE" FLOAT(15),
	"SALDO" FLOAT(15),
	"CIA" SMALLINT,
	"NPAGOS" SMALLINT,
	"PLAZO" SMALLINT);


CREATE TABLE "SA"."FACTURMA" (
	"NUM" INTEGER,
	"MAYORIS" VARCHAR(4),
	"REFER" VARCHAR(10),
	"NOMAY" VARCHAR(50),
	"DIR" VARCHAR(50),
	"RFC" VARCHAR(15),
	"STATUS" VARCHAR(1),
	"FECHA" DATE,
	"VENCE" DATE,
	"IMPORTE" FLOAT(15),
	"DESCU" FLOAT(15),
	"NETO" FLOAT(15),
	"IVA" FLOAT(15),
	"TOTAL" FLOAT(15),
	"CIA" SMALLINT,
	"NPAGOS" SMALLINT,
	"PLAZO" SMALLINT,
	"TIPAGO" VARCHAR(1),
	"PDSC" FLOAT(15),
	"MAYOMEN" VARCHAR(1)
);

CREATE INDEX "SA"."FACTURMA_X01" ON "SA"."FACTURMA" ("NUM");


CREATE TABLE "SA"."RENFACMA" (
	"FACTUR" INTEGER,
	"CONSEC" SMALLINT,
	"CODIGO" VARCHAR(13),
	"DESCRI" VARCHAR(30),
	"UNIDS" FLOAT(15),
	"PRECIOU" FLOAT(15),
	"IMPORTE" FLOAT(15),
	"PORDSC" FLOAT(15),
	"DESCU" FLOAT(15),
	"PORIVA" FLOAT(15),
	"IVA" FLOAT(15),
	"TOTAL" FLOAT(15),
	"COSTOU" FLOAT(15),
	"CIA" SMALLINT);


CREATE TABLE "SA"."OBSERVENT" (
	"TIPO" VARCHAR(1),
	"ALM" VARCHAR(4),
	"NUMERO" SMALLINT,
	"FECHA" DATE,
	"CONSE" SMALLINT,
	"OBSERVS" VARCHAR(70),
	"CIA" SMALLINT,
	"CODIGO" VARCHAR(13));


CREATE TABLE "SA"."OBSLIN" (
	"LINEA" VARCHAR(4),
	"CONSE" SMALLINT,
	"OBSER" VARCHAR(70),
	"CIA" SMALLINT,
	"FONINI" SMALLINT,
	"FONFIN" SMALLINT,
	"MOE" VARCHAR(1));


CREATE TABLE "SA"."INFCVTATMP" (
	"TIPO" VARCHAR(1),
	"ZONA" VARCHAR(2),
	"PTVTA" VARCHAR(4),
	"ALMKDX" VARCHAR(4),
	"VTASI" FLOAT(15),
	"VTANO" FLOAT(15),
	"CIA" SMALLINT);


CREATE TABLE "SA"."TABCVTA" (
	"FECINI" DATE,
	"FECFIN" DATE,
	"ZONA" VARCHAR(2),
	"ALMKDX" VARCHAR(4),
	"PTVTA" VARCHAR(4),
	"LINEA" VARCHAR(4),
	"CTOVTASI" FLOAT(15),
	"IVASI" FLOAT(15),
	"CTOVTANO" FLOAT(15),
	"TIPO" VARCHAR(1),
	"CIA" SMALLINT);


CREATE TABLE "SA"."GRUPOINV" (
	"GRUPO" VARCHAR(13),
	"DESCRI" VARCHAR(30),
	"CIA" SMALLINT,
	"IMPRI" VARCHAR(1));


CREATE TABLE "SA"."ANUARDES" (
	"GRUPO" VARCHAR(13),
	"ZONA" VARCHAR(2),
	"ANU" SMALLINT,
	"UNIDADES" VARCHAR(60),
	"CIA" SMALLINT,
	"LINEA" VARCHAR(4));


CREATE TABLE "SA"."INVFIESP" (
	"FECHA" DATE,
	"LINEA" VARCHAR(4),
	"ENTCAN" VARCHAR(1),
	"COMPRAS" FLOAT(15),
	"DEVPRO" FLOAT(15),
	"CVTAMEN" FLOAT(15),
	"CVTAMAY" FLOAT(15),
	"CANCELMEN" FLOAT(15),
	"CANCELMAY" FLOAT(15),
	"ENTESP" FLOAT(15),
	"SALESP" FLOAT(15),
	"ENTMVI" FLOAT(15),
	"SALMVI" FLOAT(15),
	"SALFON" FLOAT(15),
	"CANCELFON" FLOAT(15),
	"SALCXC" FLOAT(15),
	"ENTCXC" FLOAT(15),
	"SALCXCF" FLOAT(15),
	"ENTCXCF" FLOAT(15),
	"EXIULC" FLOAT(15),
	"CIA" SMALLINT,
	"SALFID" FLOAT(15),
	"CANCELFID" FLOAT(15)
);

CREATE INDEX "SA"."INVFIESP_X01" ON "SA"."INVFIESP" ("FECHA","LINEA");


CREATE TABLE "SA"."ARTDESPTMP" (
	"GRUPO" VARCHAR(13),
	"LINEA" VARCHAR(4),
	"ORDLIN" VARCHAR(2),
	"ESTEANU" SMALLINT,
	"ANUANTER" SMALLINT,
	"ANUAAANTER" SMALLINT);


CREATE TABLE "SA"."PROYCOM" (
	"ZONA" VARCHAR(2),
	"SUBZONA" VARCHAR(4),
	"DESCRI" VARCHAR(30),
	"SUBOGLO" VARCHAR(1),
	"PORCON" FLOAT(15),
	"PORCRD" FLOAT(15),
	"CIA" SMALLINT,
	"PORFON" FLOAT(15),
	"PORFID" FLOAT(15),
	"PORCEL" FLOAT(15));


CREATE TABLE "SA"."SUBPROYCOM" (
	"ZONA" VARCHAR(2),
	"SUBZONA" VARCHAR(4),
	"TIPO" VARCHAR(1),
	"ZONAACU" VARCHAR(2),
	"PTVTA" VARCHAR(4),
	"CIA" SMALLINT);


CREATE TABLE "SA"."EDOMAY" (
	"FECHA" DATE,
	"COMPRAS" FLOAT(15),
	"ABONOS" FLOAT(15),
	"DEVOLS" FLOAT(15),
	"SDOFIN" FLOAT(15),
	"CIA" SMALLINT,
	"MAYORIS" VARCHAR(4),
	"BONIF" FLOAT(15),
	"VENCANT" FLOAT(15),
	"VENCREC" FLOAT(15),
	"PORVENC" FLOAT(15),
	"COBINTERNA" DOUBLE PRECISION(15),
	"CARTERA" DOUBLE PRECISION(15));


CREATE TABLE "SA"."CVTAUBI" (
	"EMPAQE" VARCHAR(10),
	"UBICA" VARCHAR(5),
	"COSTO" FLOAT(15),
	"CIA" SMALLINT);


CREATE TABLE "SA"."EDOPRO" (
	"PROVE" VARCHAR(4),
	"FECHA" DATE,
	"DESXAPLI" FLOAT(15),
	"CAPITAL" FLOAT(15),
	"CFCOMP" FLOAT(15),
	"CFPROV" FLOAT(15),
	"EFECTIVO" FLOAT(15),
	"DESCTOS" FLOAT(15),
	"DEVOLS" FLOAT(15),
	"BONIFIC" FLOAT(15),
	"SALDO" FLOAT(15),
	"CIA" SMALLINT);


CREATE TABLE "SA"."RELGPODIARY" (
	"GRUPO" VARCHAR(13),
	"CODIGO" VARCHAR(13),
	"CIA" SMALLINT
);

CREATE INDEX "SA"."RELGPODIARY" ON "SA"."RELGPODIARY" ("GRUPO");


CREATE TABLE "SA"."VENCPRO" (
	"PROVE" VARCHAR(5),
	"ANU" SMALLINT,
	"MES" SMALLINT,
	"IMPORTE" FLOAT(15));


CREATE TABLE "SA"."CONCEPSTMP" (
	"CONCEPTO" VARCHAR(30),
	"NCON" INTEGER);


CREATE TABLE "SA"."PROVETMP" (
	"CODIGO" VARCHAR(4),
	"NOMBRE" VARCHAR(50),
	"DIREC" VARCHAR(50),
	"CIU" VARCHAR(30),
	"RFC" VARCHAR(15),
	"TEL" VARCHAR(20),
	"CARGOS" FLOAT(15),
	"ABONOS" FLOAT(15),
	"COMPRAANU" FLOAT(15),
	"COMPRAMES" FLOAT(15),
	"LIMITE" FLOAT(15),
	"CONTACTO" VARCHAR(30),
	"ULTMOV" INTEGER,
	"STATUS" CHAR(1),
	"CIA" SMALLINT);


CREATE TABLE "SA"."OBSERVENTTMP" (
	"TIPO" VARCHAR(1),
	"ALM" VARCHAR(4),
	"NUMERO" SMALLINT,
	"FECHA" DATE,
	"CONSE" SMALLINT,
	"OBSERVS" VARCHAR(70),
	"CIA" SMALLINT);


CREATE TABLE "SA"."PAGXVENPRO" (
	"PROVE" VARCHAR(4),
	"ENTRADA" SMALLINT,
	"PAGARE" SMALLINT,
	"VENCE" DATE,
	"FECHA" DATE,
	"IMPORTE" FLOAT(15),
	"DESXAP" FLOAT(15),
	"SALDO" FLOAT(15),
	"CIA" SMALLINT,
	"FECVEN" VARCHAR(8));


CREATE TABLE "SA"."REZAGTMP" (
	"ORDLIN" VARCHAR(2),
	"LINEA" VARCHAR(4),
	"CODIGO" VARCHAR(13),
	"ALM" VARCHAR(4),
	"ORDALM" SMALLINT,
	"FOLIO" SMALLINT,
	"CUANTOS" SMALLINT,
	"CIA" SMALLINT);


CREATE TABLE "SA"."ARTDESPTMP2" (
	"TIPO" VARCHAR(1),
	"ZONA" VARCHAR(2),
	"COD2" VARCHAR(14),
	"LINEA" VARCHAR(4),
	"MAYORIS" VARCHAR(4),
	"PTVTA" VARCHAR(4),
	"UNIDS" FLOAT(15));


CREATE TABLE "SA"."FLUJOMAY" (
	"MAYORIS" VARCHAR(4),
	"DOCTO" INTEGER,
	"FECHA" DATE,
	"VENCE" INTEGER,
	"IMPORTE" FLOAT(15),
	"SALDO" FLOAT(15),
	"CIA" SMALLINT,
	"FECVEN" DATE,
	"LETRA" SMALLINT,
	"NPAGOS" SMALLINT);


CREATE TABLE "SA"."MOVMAY2" (
	"MAYORIS" VARCHAR(4),
	"DOCTO" INTEGER,
	"PAGARE" SMALLINT,
	"CONSE" SMALLINT,
	"FECHA" DATE,
	"VENCE" DATE,
	"CONCEP" VARCHAR(30),
	"COA" VARCHAR(1),
	"IMPORTE" FLOAT(15),
	"SALDO" FLOAT(15),
	"CIA" SMALLINT,
	"TIPAGO" VARCHAR(1),
	"IDCONCEP" INTEGER
);

CREATE INDEX "SA"."MOVMAY2_X01" ON "SA"."MOVMAY2" ("MAYORIS","DOCTO");


CREATE TABLE "SA"."CTASTMP2" (
	"NIV1" VARCHAR(4),
	"NIV2" VARCHAR(4),
	"NIV3" VARCHAR(4),
	"NIV4" VARCHAR(4),
	"NOMBRE" VARCHAR(30),
	"SIGNO" VARCHAR(1),
	"DEPEND" VARCHAR(1),
	"NIVEL" SMALLINT,
	"SDOINI" FLOAT(15),
	"CARGOS" FLOAT(15),
	"ABONOS" FLOAT(15),
	"TIPO" VARCHAR(1));


CREATE TABLE "SA"."ASIENTOSTMP" (
	"TIPOL" VARCHAR(3),
	"NUMPOL" INTEGER,
	"NIV1" VARCHAR(4),
	"NIV2" VARCHAR(4),
	"NIV3" VARCHAR(4),
	"NIV4" VARCHAR(4),
	"NIVELES" SMALLINT,
	"CONCEP" VARCHAR(30),
	"CONCP2" VARCHAR(30),
	"FECHA" DATE,
	"COA" VARCHAR(1),
	"IMPORTE" FLOAT(15),
	"CONCEP1" INTEGER,
	"CONCEP2" INTEGER);


CREATE TABLE "SA"."FORMTAB" (
	"NUMERO" SMALLINT,
	"TITULO" VARCHAR(40),
	"NIV1I" SMALLINT,
	"NIV2I" SMALLINT,
	"NIV3I" SMALLINT,
	"NIV4I" SMALLINT,
	"NIV5I" SMALLINT,
	"NIV1F" SMALLINT,
	"NIV2F" SMALLINT,
	"NIV3F" SMALLINT,
	"NIV4F" SMALLINT,
	"NIV5F" SMALLINT,
	"CAS" VARCHAR(1),
	"NIVVER" SMALLINT,
	"NIVHOR" SMALLINT,
	"ESPECIAL" VARCHAR(1),
	"CTAESP" SMALLINT,
	"NIVESP" SMALLINT,
	"NIVCOMP" SMALLINT,
	"CIA" SMALLINT);


CREATE TABLE "SA"."REPTABA" (
	"CTA" SMALLINT,
	"DESCRI" VARCHAR(30),
	"HOV" VARCHAR(1),
	"FOV" VARCHAR(1),
	"CIA" SMALLINT);


CREATE TABLE "SA"."TALLER" (
	"CLAVE" VARCHAR(5),
	"NOMBRE" VARCHAR(30),
	"RAZON1" VARCHAR(40),
	"RAZON2" VARCHAR(40),
	"DIREC" VARCHAR(50),
	"TEL" VARCHAR(20),
	"GIRO" VARCHAR(20),
	"REPRE" VARCHAR(40),
	"CIA" SMALLINT);


CREATE TABLE "SA"."PERMIUSAR" (
	"IDUSE" INTEGER,
	"IDSERVIC" SMALLINT,
	"IDPERMIS" SMALLINT,
	"CIA" SMALLINT);


CREATE TABLE "SA"."PERMISERV" (
	"IDPER" SMALLINT,
	"DESCRIPER" VARCHAR(30));


CREATE TABLE "SA"."REPTAB" (
	"CTAHOR" SMALLINT,
	"CTAVER" SMALLINT,
	"PERIO" INTEGER,
	"IMPORTE" FLOAT(15),
	"CIA" SMALLINT
);

CREATE INDEX "SA"."REPTAB" ON "SA"."REPTAB" ("CTAHOR","CTAVER","PERIO","CIA");


CREATE TABLE "SA"."PRECIOSCOMB" (
	"COMBUST" VARCHAR(1),
	"FECHA" DATE,
	"PRELIT" FLOAT(15),
	"CIA" SMALLINT);


CREATE TABLE "SA"."COMBUST" (
	"CLAVE" VARCHAR(1),
	"DESCRI" VARCHAR(10),
	"PRELIT" FLOAT(15),
	"PIVA" FLOAT(15),
	"ULTCAM" DATE,
	"CIA" SMALLINT);


CREATE TABLE "SA"."SERVMANTO" (
	"CLAVE" VARCHAR(3),
	"DESCRI" VARCHAR(30),
	"MOR" VARCHAR(1),
	"PERIO" VARCHAR(1),
	"KMOFE" VARCHAR(1),
	"XCADA" INTEGER,
	"XCADANVO" INTEGER,
	"TOLER" INTEGER,
	"TOGGLE" VARCHAR(1),
	"SERVOP" VARCHAR(20),
	"PARAM" VARCHAR(1),
	"VEHICULO" INTEGER,
	"CIA" SMALLINT);


CREATE TABLE "SA"."POLIGAS" (
	"UBICA" VARCHAR(2),
	"FECHA" DATE,
	"USUARIO" VARCHAR(4),
	"IMPORTE" FLOAT(15),
	"IVA" FLOAT(15),
	"TOTAL" FLOAT(15),
	"PROMKML" FLOAT(15),
	"LITROS" FLOAT(15),
	"KMTS" INTEGER,
	"CIA" SMALLINT);


CREATE TABLE "SA"."VEHICULO" (
	"CODIGO" INTEGER,
	"DESCRI" VARCHAR(40),
	"MARCA" VARCHAR(20),
	"MODELO" SMALLINT,
	"FECING" DATE,
	"FECBAJ" DATE,
	"STATUS" VARCHAR(1),
	"PLACAS" VARCHAR(10),
	"CHASIS" VARCHAR(10),
	"SERMOT" VARCHAR(10),
	"MAXTAC" INTEGER,
	"KILOM" INTEGER,
	"TACACU" INTEGER,
	"NVOHASTA" INTEGER,
	"NVOUSA" VARCHAR(1),
	"TIPOGAS" VARCHAR(1),
	"CARACTM" VARCHAR(20),
	"TIPLLANTA" VARCHAR(20),
	"BATERIA" VARCHAR(20),
	"POLSEG" VARCHAR(10),
	"VENPOL" DATE,
	"CHOFER" VARCHAR(5),
	"CAMTAC" VARCHAR(1),
	"KMTCAMTAC" INTEGER,
	"ZONA" VARCHAR(2),
	"MOTO" VARCHAR(1),
	"FECAMTAC" DATE,
	"CIA" SMALLINT);


CREATE TABLE "SA"."RENPOGAS" (
	"UBICA" VARCHAR(2),
	"FECHA" DATE,
	"VEHICULO" INTEGER,
	"KMTANT" INTEGER,
	"KMTACT" INTEGER,
	"RECORR" INTEGER,
	"LITROS" FLOAT(15),
	"PRECIOU" FLOAT(15),
	"TIPOGAS" VARCHAR(1),
	"CHOFER" VARCHAR(5),
	"ZONA" VARCHAR(2),
	"IMPORTE" FLOAT(15),
	"IVA" FLOAT(15),
	"TOTAL" FLOAT(15),
	"PIVA" FLOAT(15),
	"USUARIO" VARCHAR(4),
	"FECNOT" DATE,
	"CONSE" SMALLINT,
	"CIA" SMALLINT,
	"KMTACU" INTEGER);


CREATE TABLE "SA"."VEHSER" (
	"VEHI" INTEGER,
	"FECHA" DATE,
	"CONSE" SMALLINT,
	"SERV" VARCHAR(3),
	"KILOM" INTEGER,
	"TOGGLE" VARCHAR(1),
	"ESTADO" VARCHAR(1),
	"TALLER" VARCHAR(4),
	"COSTO" FLOAT(15),
	"CHOFER" VARCHAR(5),
	"OBSER1" VARCHAR(50),
	"OBSER2" VARCHAR(50),
	"OBSER3" VARCHAR(50),
	"CIA" SMALLINT);


CREATE TABLE "SA"."ZONAMVE" (
	"ZONA" VARCHAR(2),
	"NOMBRE" VARCHAR(30),
	"TIPO" VARCHAR(1),
	"CIA" SMALLINT);


CREATE TABLE "SA"."CARTCON" (
	"MIUNION" INTEGER,
	"FECHA" DATE,
	"COA" VARCHAR(1),
	"IMPORTE" FLOAT(15),
	"REFEREN" VARCHAR(10),
	"NUMPOL" SMALLINT,
	"TIPOL" VARCHAR(3),
	"VENCE" DATE,
	"FECSAL" DATE,
	"SALDO" FLOAT(15),
	"CIA" SMALLINT,
	"CONCEPTO" VARCHAR(30),
	"NUMASI" SMALLINT,
	"SIGNO" VARCHAR(1)
);

CREATE INDEX "SA"."CARTCON" ON "SA"."CARTCON" ("MIUNION","CIA");


CREATE TABLE "SA"."CHOFER" (
	"CLAVE" VARCHAR(5),
	"NOMBRE" VARCHAR(50),
	"DIREC" VARCHAR(50),
	"CIU" VARCHAR(25),
	"RFC" VARCHAR(15),
	"TEL" VARCHAR(20),
	"CARGOS" FLOAT(15),
	"ABONOS" FLOAT(15),
	"COMPRAANU" FLOAT(15),
	"COMPRAMES" FLOAT(15),
	"LIMITE" FLOAT(15),
	"VENDEDOR" INTEGER,
	"CONTACTO" VARCHAR(30),
	"STATUS" VARCHAR(1),
	"CIA" SMALLINT,
	"FECING" DATE,
	"FECBAJ" DATE);


CREATE TABLE "SA"."PRECOMBUTMP" (
	"CLAVE" VARCHAR(1),
	"PRECIO" FLOAT(15),
	"FECHA" DATE);


CREATE TABLE "SA"."EMPLETMP" (
	"CLAVE" VARCHAR(5),
	"NOMBRE" VARCHAR(50),
	"DIREC" VARCHAR(50),
	"CIU" VARCHAR(25),
	"RFC" VARCHAR(15),
	"IMSS" VARCHAR(20),
	"PUESTO" VARCHAR(20),
	"FECNAC" VARCHAR(6),
	"STATUS" VARCHAR(1),
	"FECING" DATE,
	"FECBAJ" DATE);


CREATE TABLE "SA"."EMPLEADO" (
	"CLAVE" INTEGER,
	"NOMBRE" VARCHAR(50),
	"DIREC" VARCHAR(50),
	"CIU" VARCHAR(30),
	"RFC" VARCHAR(15),
	"IMSS" VARCHAR(20),
	"PUESTO" VARCHAR(20),
	"TEL" VARCHAR(20),
	"CARGOS" FLOAT(15),
	"ABONOS" FLOAT(15),
	"COMPRAANU" FLOAT(15),
	"COMPRAMES" FLOAT(15),
	"LIMITE" FLOAT(15),
	"VENDEDOR" INTEGER,
	"CONTACTO" VARCHAR(30),
	"STATUS" VARCHAR(1),
	"CIA" SMALLINT,
	"FECING" DATE,
	"FECBAJ" DATE,
	"ANUNAC" SMALLINT,
	"MESNAC" SMALLINT,
	"DIANAC" SMALLINT);


CREATE TABLE "SA"."EXPEDTE" (
	"CODIGO" INTEGER,
	"FECHA" DATE,
	"CONSE" SMALLINT,
	"TIPOMV" VARCHAR(1),
	"TIPOINF" VARCHAR(1),
	"OBSERVS" VARCHAR(70),
	"CIA" SMALLINT);


CREATE TABLE "SA"."PUESTOS" (
	"PUESTO" VARCHAR(20),
	"CIA" SMALLINT);


CREATE TABLE "SA"."TIPOSMOV" (
	"TIPO" VARCHAR(1),
	"DESCRI" VARCHAR(20),
	"CIA" SMALLINT);


CREATE TABLE "SA"."RENPOLCO" (
	"ALM" VARCHAR(4),
	"FECHA" DATE,
	"NUMREN" SMALLINT,
	"DOCTO" INTEGER,
	"REFER" VARCHAR(10),
	"CONCEP" VARCHAR(30),
	"IMPORTE" FLOAT(15),
	"CLIENTE" VARCHAR(4),
	"LETRA" SMALLINT,
	"CIA" SMALLINT,
	"TIPAGO" VARCHAR(1),
	"IDPOLCOB" INTEGER,
	"FOLIO" INTEGER,
	"IDRENPOLCO" INTEGER,
	"IDCONCEP" INTEGER
);

CREATE INDEX "SA"."RENPOLCO" ON "SA"."RENPOLCO" ("ALM","FECHA");


CREATE TABLE "SA"."POLCOB" (
	"ALM" VARCHAR(4),
	"FECHA" DATE,
	"IMPORTE" FLOAT(15),
	"STATUS" VARCHAR(1),
	"USUARIO" VARCHAR(20),
	"CIA" SMALLINT,
	"IDPOLCOB" INTEGER,
	"FOLIO" INTEGER,
	"IDCONCEP" INTEGER
);

CREATE INDEX "SA"."POLCOB" ON "SA"."POLCOB" ("ALM","FECHA");


CREATE TABLE "SA"."USARIOS" (
	"IDUSE" INTEGER,
	"NOMBRE" VARCHAR(15),
	"CLAVE" VARCHAR(10),
	"NOMBRE2" VARCHAR(50),
	"MAESTRO" VARCHAR(1),
	"INICIALES" VARCHAR(4),
	"CIA" SMALLINT);


CREATE TABLE "SA"."ARTDESPRES" (
	"GRUPO" VARCHAR(13),
	"PERIODO" INTEGER,
	"PRESPUES" SMALLINT,
	"CIA" SMALLINT);


CREATE TABLE "SA"."INVULPRE" (
	"CODIGO" VARCHAR(13),
	"FECHA" DATE,
	"PRECMDS" FLOAT(15),
	"PRECELEC" FLOAT(15),
	"EMPQE" VARCHAR(10),
	"OBSERVS" VARCHAR(70),
	"CIA" SMALLINT,
	"FECINIVIG" DATE);


CREATE TABLE "SA"."INFMORAUX" (
	"ZONA" SMALLINT,
	"NUMREP" SMALLINT,
	"COD" SMALLINT,
	"FECHA" DATE,
	"LITIGIO" CHAR(1),
	"DE00A30" FLOAT(15),
	"DE31A60" FLOAT(15),
	"DE61A99" FLOAT(15),
	"CLIENTES" SMALLINT,
	"DOCVENC" SMALLINT,
	"DIASMOR" FLOAT(15));


CREATE TABLE "SA"."ZONAMVEDIR" (
	"ZONA" INTEGER,
	"NOMBRE" VARCHAR(30),
	"TIPO" VARCHAR(1));


CREATE TABLE "SA"."AUXREPMAY" (
	"CONCEPT" VARCHAR(30),
	"IMPORTET" FLOAT(15),
	"FCOMPRAT" DATE,
	"FVENCTOT" DATE,
	"SALDOT" FLOAT(15));


CREATE TABLE "SA"."ANALISMATMP" (
	"CODIGO" VARCHAR(13),
	"LINEA" VARCHAR(4),
	"ORDLIN" VARCHAR(2),
	"CANTI" FLOAT(15),
	"COSTOTOT" FLOAT(15),
	"CIA" SMALLINT,
	"COSTOU" FLOAT(15));


CREATE TABLE "SA"."EQUIEST" (
	"ALM" VARCHAR(4) NOT NULL,
	"PVTA" VARCHAR(4) NOT NULL,
	PRIMARY KEY ("ALM","PVTA")
);


CREATE TABLE "SA"."ORDENALM" (
	"ID" INTEGER NOT NULL,
	"ALM" VARCHAR(4) NOT NULL);


CREATE TABLE "SA"."MARCART" (
	"CODART" VARCHAR(13) NOT NULL,
	"CODMCA" VARCHAR(4) NOT NULL,
	"LINEA" VARCHAR(4) NOT NULL,
	PRIMARY KEY ("CODART","CODMCA")
);


CREATE TABLE "SA"."EXIPTVTA" (
	"PTVTA" VARCHAR(4) NOT NULL,
	"ALMEXI" VARCHAR(4) NOT NULL,
	"CIA" SMALLINT,
	UNIQUE ("PTVTA","ALMEXI")
);


CREATE TABLE "SA"."PERMISOS" (
	"PERMISO" CHAR(1) NOT NULL,
	"DESCRI" VARCHAR(30) NOT NULL,
	UNIQUE ("PERMISO")
);


CREATE TABLE "SA"."PLAZOSCRD" (
	"IDPLAZOCRD" INTEGER NOT NULL,
	"IDLINEA" INTEGER NOT NULL,
	"LINEA" VARCHAR(4) NOT NULL,
	"PLAZOMAX" INTEGER NOT NULL,
	"PLISTAMAX" FLOAT(15) NOT NULL,
	"TIPO" INTEGER NOT NULL,
	"CIA" INTEGER NOT NULL,
	PRIMARY KEY ("IDPLAZOCRD")
);


CREATE TABLE "SA"."EXISTENTMP" (
	"ARTICULO" VARCHAR(30),
	"ALM" VARCHAR(4),
	"MAX" INTEGER,
	"EMPAQUE" VARCHAR(10),
	"CANT" INTEGER,
	"ID" SMALLINT,
	"ORD" SMALLINT);


CREATE TABLE "SA"."INVTMP" (
	"CODIGO" VARCHAR(13),
	"COD2" VARCHAR(13),
	"DESCRI" VARCHAR(30),
	"TIPO" VARCHAR(3),
	"PROVE" VARCHAR(4),
	"LINEA" VARCHAR(4),
	"EMPAQE" VARCHAR(10),
	"MINIMO" SMALLINT,
	"PRECIO" FLOAT(15),
	"PIVA" FLOAT(15),
	"COSTOS" FLOAT(15),
	"COSTON" FLOAT(15),
	"FECALTA" DATE,
	"CIA" SMALLINT,
	"PRECELEC" FLOAT(15));


CREATE TABLE "SA"."ENTPAGTMP" (
	"PROVE" VARCHAR(4),
	"NUMERO" SMALLINT,
	"FECHA" DATE,
	"FACPRO" VARCHAR(10),
	"FECENTRA" DATE,
	"TASACFC" FLOAT(15),
	"IMPORTE" FLOAT(15),
	"TOTAL" FLOAT(15),
	"CTOFINENT" FLOAT(15),
	"IVACFCENT" FLOAT(15),
	"CAPITAL" FLOAT(15),
	"LETRAS" SMALLINT,
	"IVA" FLOAT(15),
	"IVAINT" FLOAT(15),
	"PORIVA" FLOAT(15),
	"TASAPRO" FLOAT(15),
	"PLAZO" SMALLINT,
	"SDOCAP" FLOAT(15),
	"PAGCAP" FLOAT(15),
	"PAGINT" FLOAT(15),
	"TOTALINTER" FLOAT(15),
	"PAGOS" FLOAT(15),
	"PAGIVA" FLOAT(15),
	"TASMEN" VARCHAR(1),
	"PLANP" SMALLINT,
	"DESCXAP" FLOAT(15),
	"FECPRP" DATE,
	"FECULP" DATE,
	"FLETES" FLOAT(15),
	"CIA" SMALLINT,
	"FECSAL" DATE);


CREATE TABLE "SA"."MVENTPAGTMP" (
	"PROVE" VARCHAR(4),
	"ENTRADA" SMALLINT,
	"FECHA" DATE,
	"PAGARE" SMALLINT,
	"CONSE" SMALLINT,
	"TPMOV" VARCHAR(1),
	"TIPO2" VARCHAR(1),
	"CONCEP" SMALLINT,
	"VENCE" DATE,
	"CAPITAL" FLOAT(15),
	"INTERES" FLOAT(15),
	"IVA" FLOAT(15),
	"SALDO" FLOAT(15),
	"CFC" FLOAT(15),
	"DESXAP" FLOAT(15),
	"CIA" SMALLINT);


CREATE TABLE "SA"."GPODIARY" (
	"IDGPODIARY" INTEGER NOT NULL,
	"GRUPO" VARCHAR(13) NOT NULL,
	"DESCRI" VARCHAR(30),
	"IMPRIME" VARCHAR(1),
	"CIA" SMALLINT NOT NULL,
	PRIMARY KEY ("IDGPODIARY"),
	UNIQUE ("GRUPO","CIA")
);


CREATE TABLE "SA"."MARCAS" (
	"CODMARCA" VARCHAR(4) NOT NULL,
	"DESMARCA" VARCHAR(16) NOT NULL,
	PRIMARY KEY ("CODMARCA"),
	UNIQUE ("CODMARCA"),
	UNIQUE ("DESMARCA")
);


CREATE TABLE "SA"."GENERADORES" (
	"TIPODB" VARCHAR(70),
	"PARTE1" VARCHAR(70),
	"PARTE2" VARCHAR(70),
	"SECUEN" VARCHAR(1));


CREATE TABLE "SA"."MIBD" (
	"MITIPODB" VARCHAR(70));


CREATE TABLE "SA"."PARAMBD" (
	"TIPODB" VARCHAR(70) NOT NULL,
	"IDENTI" VARCHAR(20) NOT NULL,
	"SENTENCIA" VARCHAR(100) NOT NULL,
	PRIMARY KEY ("TIPODB","IDENTI")
);


CREATE TABLE "SA"."EXISTMP" (
	"CODIGO" VARCHAR(13),
	"ALM" VARCHAR(4),
	"PROVE" VARCHAR(4),
	"LINEA" VARCHAR(4),
	"COSTO" FLOAT(15),
	"EXIS" INTEGER,
	"CIA" SMALLINT
);

CREATE INDEX "SA"."EXISTMP_X01" ON "SA"."EXISTMP" ("CODIGO","ALM","PROVE");


CREATE TABLE "SA"."INV_MARCAS" (
	"IDMARCAINV" INTEGER NOT NULL,
	"CODIGO" VARCHAR(4) NOT NULL,
	"MARCA" VARCHAR(30) NOT NULL,
	PRIMARY KEY ("IDMARCAINV"),
	UNIQUE ("CODIGO"),
	UNIQUE ("MARCA")
);


CREATE TABLE "SA"."INV_CONCEPS" (
	"IDCONCEP" INTEGER NOT NULL,
	"CONCEP" VARCHAR(60) NOT NULL,
	PRIMARY KEY ("IDCONCEP"),
	UNIQUE ("CONCEP")
);


CREATE TABLE "SA"."INV_SITUACIONES" (
	"IDSITUAC" INTEGER NOT NULL,
	"SITUACION" VARCHAR(15) NOT NULL,
	PRIMARY KEY ("IDSITUAC"),
	UNIQUE ("SITUACION")
);


CREATE TABLE "SA"."INV_LINEAS" (
	"IDLINEA" INTEGER NOT NULL,
	"LINEA" VARCHAR(4) NOT NULL,
	"DESCRI" VARCHAR(30) NOT NULL,
	"ORDEN" SMALLINT NOT NULL,
	"REGION" CHAR(1) NOT NULL,
	"CIA" SMALLINT NOT NULL,
	PRIMARY KEY ("IDLINEA"),
	UNIQUE ("LINEA","CIA")
);


CREATE TABLE "SA"."INV_GRUPOS" (
	"IDGRUPO" INTEGER NOT NULL,
	"CODIGO" VARCHAR(14) NOT NULL,
	"DESCRI" VARCHAR(30) NOT NULL,
	"IMPRI" VARCHAR(1) NOT NULL,
	"CIA" SMALLINT NOT NULL,
	PRIMARY KEY ("IDGRUPO"),
	UNIQUE ("CODIGO","CIA")
);


CREATE TABLE "SA"."INV_INVHIST" (
	"IDART" INTEGER NOT NULL,
	"CODIGO" VARCHAR(13) NOT NULL,
	"IDDESCRI" INTEGER,
	"CIA" SMALLINT NOT NULL,
	PRIMARY KEY ("IDART"),
	UNIQUE ("CODIGO","CIA")
);

CREATE INDEX "SA"."INV_INVHIST_X01" ON "SA"."INV_INVHIST" ("CODIGO");


CREATE TABLE "SA"."INV_ARTDESP" (
	"IDARTDESP" INTEGER NOT NULL,
	"IDART" INTEGER NOT NULL,
	"IDLINEA" INTEGER NOT NULL,
	"IDPTOVTA" INTEGER NOT NULL,
	"IDZONA" INTEGER NOT NULL,
	"IDGRUPO" INTEGER,
	"PERIO" INTEGER NOT NULL,
	"CANTI" FLOAT(15) NOT NULL,
	"CIA" SMALLINT,
	PRIMARY KEY ("IDARTDESP")
);

CREATE INDEX "SA"."INV_ARTDESP_X01" ON "SA"."INV_ARTDESP" ("IDGRUPO","PERIO");


CREATE TABLE "SA"."INV_RELACS" (
	"IDREL" INTEGER NOT NULL,
	"CODIGO" VARCHAR(10) NOT NULL,
	"DESCRI" VARCHAR(30) NOT NULL,
	PRIMARY KEY ("IDREL"),
	UNIQUE ("CODIGO"),
	UNIQUE ("DESCRI")
);


CREATE TABLE "SA"."INV_RELINV" (
	"IDRELINV" INTEGER NOT NULL,
	"IDART" INTEGER NOT NULL,
	"IDREL" INTEGER NOT NULL,
	"IDDATO" INTEGER NOT NULL,
	"CONSE" INTEGER NOT NULL,
	PRIMARY KEY ("IDRELINV")
);

CREATE INDEX "SA"."INV_RELINV_X01" ON "SA"."INV_RELINV" ("IDREL","IDART");


CREATE TABLE "SA"."DESCRIART" (
	"IDDESCRI" INTEGER NOT NULL,
	"CODIGO" VARCHAR(13) NOT NULL,
	"IDART" INTEGER NOT NULL,
	"ORDEN" INTEGER NOT NULL,
	"DESCRI" VARCHAR(70),
	"CIA" SMALLINT,
	PRIMARY KEY ("IDDESCRI")
);

CREATE INDEX "SA"."DESCRIART_X01" ON "SA"."DESCRIART" ("CODIGO");


CREATE TABLE "SA"."PERMIUSUARIO" (
	"IDUSUARIO" INTEGER NOT NULL,
	"IDPERMIS" INTEGER NOT NULL,
	"PERMIS" VARCHAR(1),
	PRIMARY KEY ("IDUSUARIO","IDPERMIS")
);


CREATE TABLE "SA"."INV_USUARIOS" (
	"IDUSUARIO" INTEGER NOT NULL,
	"IDNOMBRE" INTEGER NOT NULL,
	"LOGIN" VARCHAR(15) NOT NULL,
	"CLAVE" VARCHAR(15),
	"MAESTRO" VARCHAR(1),
	"NUMPOL" VARCHAR(2),
	"INICIALES" VARCHAR(4) NOT NULL,
	PRIMARY KEY ("IDUSUARIO"),
	UNIQUE ("LOGIN"),
	UNIQUE ("INICIALES")
);


CREATE TABLE "SA"."INV_CORTEANU" (
	"FECORTE" DATE NOT NULL,
	"CIA" SMALLINT);


CREATE TABLE "SA"."INV_TIPOVTA" (
	"IDTIPOVTA" INTEGER NOT NULL,
	"VOC" VARCHAR(1) NOT NULL,
	"TIPO" VARCHAR(1) NOT NULL,
	"TIPOSAL" VARCHAR(1) NOT NULL,
	"DESCRI" VARCHAR(60) NOT NULL,
	PRIMARY KEY ("IDTIPOVTA")
);


CREATE TABLE "SA"."INV_TPVTATMP" (
	"IDTPVTATMP" INTEGER NOT NULL,
	"IDTAREA" INTEGER NOT NULL,
	"IDTIPOVTA" INTEGER NOT NULL,
	"FACTOR" INTEGER NOT NULL,
	"TIPOSAL" VARCHAR(1),
	PRIMARY KEY ("IDTPVTATMP")
);


CREATE TABLE "SA"."INV_GPOEDO_MASTER" (
	"IDGPOEDO" INTEGER NOT NULL,
	"CVEGPO" INTEGER NOT NULL,
	"CIA" INTEGER,
	PRIMARY KEY ("IDGPOEDO")
);


CREATE TABLE "SA"."INV_GPOEDO_TIPO" (
	"IDGPOEDOTIPO" INTEGER NOT NULL,
	"IDGPOEDO" INTEGER NOT NULL,
	"SIGNO" INTEGER NOT NULL,
	"IDTIPOENT" INTEGER NOT NULL,
	"TIPOENT" VARCHAR(1) NOT NULL,
	"ENTOSAL" VARCHAR(1) NOT NULL,
	"DESCRI" VARCHAR(50),
	"CIA" INTEGER NOT NULL,
	PRIMARY KEY ("IDGPOEDOTIPO")
);


CREATE TABLE "SA"."INV_INVFIESP" (
	"IDINVFIESP" INTEGER NOT NULL,
	"FECHA" DATE NOT NULL,
	"IDGPOEDOTIPO" INTEGER NOT NULL,
	"IDLINEA" INTEGER NOT NULL,
	"ENTCAN" VARCHAR(1) NOT NULL,
	"IMPORTE" FLOAT(15),
	"CIA" INTEGER NOT NULL,
	PRIMARY KEY ("IDINVFIESP")
);


CREATE TABLE "SA"."INV_DATOSENT" (
	"IDDATOSENT" INTEGER NOT NULL,
	"IDENTRADA" INTEGER NOT NULL,
	"TIPO" VARCHAR(1) NOT NULL,
	"ALM" VARCHAR(4) NOT NULL,
	"NUMERO" INTEGER NOT NULL,
	"IDART" INTEGER NOT NULL,
	"SERIE" VARCHAR(30) NOT NULL,
	"IDSERIEMOT" INTEGER NOT NULL,
	"IDPEDTO" INTEGER NOT NULL,
	"IDADUANA" INTEGER NOT NULL,
	"FECHAPED" DATE NOT NULL,
	PRIMARY KEY ("IDDATOSENT")
);

CREATE INDEX "SA"."INV_DATOSENTX01" ON "SA"."INV_DATOSENT" ("IDART","SERIE");


CREATE TABLE "SA"."INV_ARTICPED" (
	"IDARTICPED" INTEGER NOT NULL,
	"IDART" INTEGER NOT NULL,
	"IDCARAC" INTEGER NOT NULL,
	PRIMARY KEY ("IDARTICPED")
);


CREATE TABLE "SA"."INV_CARACS" (
	"IDCARAC" INTEGER NOT NULL,
	"DESCRI" VARCHAR(30),
	PRIMARY KEY ("IDCARAC")
);


CREATE TABLE "SA"."INV_DATOSENTTMP" (
	"TIPO" VARCHAR(1) NOT NULL,
	"ALM" VARCHAR(4) NOT NULL,
	"NUMERO" INTEGER NOT NULL,
	"IDART" INTEGER NOT NULL,
	"SERIE" VARCHAR(30) NOT NULL,
	"SERIEMOT" VARCHAR(60),
	"PEDTO" VARCHAR(60),
	"ADUANA" VARCHAR(60),
	"FECHAPED" DATE NOT NULL);


CREATE TABLE "SA"."INV_CAMBIOS" (
	"TIPO" VARCHAR(1),
	"CODIGO" VARCHAR(13),
	"FECHA" DATE,
	"CAMBIOS" VARCHAR(60));


CREATE TABLE "SA"."INV_CAMBIOSTMP" (
	"TIPO" VARCHAR(1),
	"CODIGO" VARCHAR(13),
	"FECHA" DATE,
	"CAMBIOS" VARCHAR(60));


CREATE TABLE "SA"."INV_VTACEL" (
	"IDVTACEL" INTEGER NOT NULL,
	"IDART" INTEGER NOT NULL,
	"CUOTAMARG" DOUBLE PRECISION(15),
	"FECHAINI" DATE,
	UNIQUE ("IDVTACEL")
);


CREATE TABLE "SA"."PERIODOENT" (
	"ANIO" INTEGER NOT NULL,
	"LETRA" VARCHAR(4),
	PRIMARY KEY ("ANIO")
);


CREATE TABLE "SA"."INVENTMP" (
	"CODIGO" VARCHAR(13),
	"COD2" VARCHAR(13),
	"DESCRI" VARCHAR(30),
	"TIPO" VARCHAR(3),
	"PROVE" VARCHAR(4),
	"LINEA" VARCHAR(4),
	"EMPAQE" VARCHAR(10),
	"MINIMO" SMALLINT,
	"MAXIMO" SMALLINT,
	"PRECIO" FLOAT(15),
	"PIVA" FLOAT(15),
	"COSTOS" FLOAT(15),
	"COSTON" FLOAT(15),
	"FECALTA" DATE,
	"CIA" SMALLINT,
	"MDS" VARCHAR(1),
	"ELEC" VARCHAR(1),
	"PRECELEC" FLOAT(15));


CREATE TABLE "SA"."INV_LINEASTMP" (
	"IDLINEA" INTEGER NOT NULL,
	"LINEA" VARCHAR(4) NOT NULL,
	"DESCRI" VARCHAR(30) NOT NULL,
	"ORDEN" SMALLINT NOT NULL,
	"REGION" CHAR(1) NOT NULL,
	"CIA" SMALLINT NOT NULL);


CREATE TABLE "SA"."INV_MARCASTMP" (
	"IDMARCAINV" INTEGER NOT NULL,
	"CODIGO" VARCHAR(4) NOT NULL,
	"MARCA" VARCHAR(30) NOT NULL);


CREATE TABLE "SA"."INV_INVHISTTMP" (
	"IDART" INTEGER NOT NULL,
	"CODIGO" VARCHAR(13) NOT NULL,
	"IDDESCRI" INTEGER,
	"CIA" SMALLINT NOT NULL);


CREATE TABLE "SA"."INV_RELINVTMP" (
	"IDRELINV" INTEGER NOT NULL,
	"IDART" INTEGER NOT NULL,
	"IDREL" INTEGER NOT NULL,
	"IDDATO" INTEGER NOT NULL,
	"CONSE" INTEGER NOT NULL);


CREATE TABLE "SA"."INV_CREDCON" (
	"IDCRDCON" INTEGER NOT NULL,
	"DESCRI" VARCHAR(15) NOT NULL,
	PRIMARY KEY ("IDCRDCON"),
	UNIQUE ("DESCRI")
);


CREATE TABLE "SA"."INV_POLCAMPRE" (
	"IDPOLCAMPRE" INTEGER NOT NULL,
	"FOLIO" INTEGER NOT NULL,
	"FECHA" DATE NOT NULL,
	"FECINI" DATE NOT NULL,
	"IDUSUARIO" INTEGER NOT NULL,
	"STATUS" INTEGER NOT NULL,
	"IDCONCEP" INTEGER NOT NULL,
	"CIA" INTEGER NOT NULL,
	PRIMARY KEY ("IDPOLCAMPRE"),
	UNIQUE ("FOLIO","CIA")
);


CREATE TABLE "SA"."INV_RENPOLCAMPRE" (
	"IDRENPOLCAMPRE" INTEGER NOT NULL,
	"IDPOLCAMPRE" INTEGER NOT NULL,
	"IDART" INTEGER NOT NULL,
	"ANTPRMDS" DOUBLE PRECISION(15),
	"ANTPRELEC" DOUBLE PRECISION(15),
	"PRECMDS" DOUBLE PRECISION(15),
	"PRECELEC" DOUBLE PRECISION(15),
	"ANTEMPAQ" INTEGER NOT NULL,
	"NVOEMPAQ" INTEGER NOT NULL,
	"IDOBSERV" INTEGER NOT NULL,
	PRIMARY KEY ("IDRENPOLCAMPRE")
);


-- *** PROCEDURES ***

SET SCHEMA 'SA';

"CREATE PROCEDURE BUSCASERIE( IDART VARCHAR(13), SERIEBUS VARCHAR(20), CIA SMALLINT )
RETURNS (
  CODIGO VARCHAR(13), FECHA DATE, FOLIO INTEGER, SERIE VARCHAR(20), 
  ALM VARCHAR(4), COSTO FLOAT,
  PROVE VARCHAR(60), MODENT CHAR(1), NENTRADA INTEGER, COMPRA VARCHAR(60), 
  FECSALE DATE, MODSAL CHAR(1), IDREG INTEGER
)
BEGIN
  DECLARE IDSERIE INTEGER;
  DECLARE IDNOMPRO INTEGER;
  DECLARE FECSAL DATE;
  DECLARE IDCOMPRO INTEGER;
  DECLARE SALIO CHAR(1);
  DECLARE IDALMVIENE VARCHAR(4);
  DECLARE FOLVIENE INTEGER;
  DECLARE IDALMHACIA VARCHAR(4);
  DECLARE FOLREC INTEGER;
  DECLARE NOMBRE_COMPRA VARCHAR(60);
  DECLARE NOMBRE_PRO VARCHAR(60);
  DECLARE CVEALM_VIENE VARCHAR(4);

  EXEC SQL PREPARE SELEC_BUS_MOVART SELECT CODIGO, ALMAC, FECHA, FOLIO, SERIE, NOMPRO,
	FECHASAL, NENTRADA, SALIO, VIENEDE, FOLVIENE, VAHACIA, FOLREC, MODENT, 
	COMPRO, MODSAL, COSTO
	FROM MOVART WHERE CODIGO = ? AND SERIE LIKE ? AND CIA=?
	ORDER BY FECHA, ALMAC, FOLIO;
  EXEC SQL PREPARE SELEC_BUS_NOMALM SELECT CLAVE, NOMBRE FROM ALMACEN
       WHERE CLAVE = ? AND CIA=?;
  EXEC SQL PREPARE SELEC_BUS_CONCEP SELECT CONCEPTO FROM CONCEPS WHERE NCON = ?;
  EXEC SQL EXECUTE SELEC_BUS_MOVART  USING (IDART, SERIEBUS, CIA)
     INTO ( CODIGO, ALM, FECHA, FOLIO, SERIE, IDNOMPRO,  FECSAL, NENTRADA, 
     SALIO, IDALMVIENE, FOLVIENE, IDALMHACIA, FOLREC, MODENT, IDCOMPRO, MODSAL, COSTO);
  IDREG := 0;
  EXEC SQL FETCH SELEC_BUS_MOVART;
  WHILE SQLSUCCESS LOOP
    IF SALIO = 'S' THEN
      IF FOLREC > 0 THEN
        EXEC SQL EXECUTE SELEC_BUS_NOMALM USING (IDALMHACIA, CIA)
             INTO (CVEALM_VIENE, NOMBRE_PRO);
        EXEC SQL FETCH SELEC_BUS_NOMALM;
        COMPRA := CVEALM_VIENE + ' ' + NOMBRE_PRO + ' ' + CONVERT_CHAR(FOLREC);
      ELSE
        EXEC SQL EXECUTE SELEC_BUS_CONCEP USING (IDCOMPRO) INTO (COMPRA);
        EXEC SQL FETCH SELEC_BUS_CONCEP;
      END IF
      FECSALE := FECSAL;

    ELSE
      COMPRA := NULL;
      FECSALE := NULL;
      MODSAL := NULL;
    END IF
    IF FOLVIENE > 0 THEN
      EXEC SQL EXECUTE SELEC_BUS_NOMALM USING (IDALMVIENE, CIA)
           INTO (CVEALM_VIENE, NOMBRE_PRO);
      EXEC SQL FETCH SELEC_BUS_NOMALM;
      PROVE := CVEALM_VIENE + ' ' + NOMBRE_PRO + ' ' + CONVERT_CHAR(FOLVIENE);
    ELSE
      EXEC SQL EXECUTE SELEC_BUS_CONCEP USING (IDNOMPRO) INTO (PROVE);
      EXEC SQL FETCH SELEC_BUS_CONCEP;
    END IF
    IDREG := IDREG + 1;
    RETURN ROW;
    EXEC SQL FETCH SELEC_BUS_MOVART;
  END LOOP;
END
";

"CREATE PROCEDURE BUSCONCEP (CONCEP VARCHAR(60) )
   RETURNS (IDCONCEP INTEGER, CONCEPTO VARCHAR(60))
   BEGIN
   EXEC SQL PREPARE BUSCONCEP1 SELECT IDCONCEP FROM INV_CONCEPS WHERE CONCEP = ?;
   EXEC SQL PREPARE BUSCONCEP2  SELECT MAX(IDCONCEP) FROM INV_CONCEPS WHERE IDCONCEP > 0;
   EXEC SQL PREPARE BUSCONCEP3 INSERT INTO INV_CONCEPS (IDCONCEP, CONCEP) VALUES (?,?);
   EXEC SQL EXECUTE BUSCONCEP1 USING (CONCEP) INTO (IDCONCEP);
   EXEC SQL FETCH BUSCONCEP1;
   IF SQLSUCCESS = 1  THEN
       CONCEPTO := CONCEP;
       RETURN ROW;
   ELSE
     EXEC SQL EXECUTE BUSCONCEP2 INTO (IDCONCEP);
     EXEC SQL FETCH BUSCONCEP2;
     IF IDCONCEP IS NULL THEN
       IDCONCEP := 0;
     END IF
     IDCONCEP := IDCONCEP + 1;
     EXEC SQL EXECUTE BUSCONCEP3 USING (IDCONCEP, CONCEP);
     CONCEPTO :=CONCEP;
     RETURN ROW;
  END IF
  EXEC SQL DROP BUSCONCEP1;
  EXEC SQL DROP BUSCONCEP2;
  EXEC SQL DROP BUSCONCEP3;
   END
";

"CREATE PROCEDURE BUSDESCRINV
        RETURNS (IDDESCRI INTEGER, DESCRI VARCHAR(50))
BEGIN
   EXEC SQL PREPARE BUSDESC1 SELECT RTRIM(LTRIM(DESCRI)) FROM INVEN;
   EXEC SQL PREPARE BUSDESC2 CALL BUSCONCEP(?);
   EXEC SQL EXECUTE BUSDESC1 INTO (DESCRI);
   EXEC SQL FETCH BUSDESC1;
   WHILE SQLSUCCESS LOOP
      EXEC SQL EXECUTE BUSDESC2 USING (DESCRI) INTO (IDDESCRI);
      EXEC SQL FETCH BUSDESC2;
      RETURN ROW;
      EXEC SQL FETCH BUSDESC1;
   END LOOP;
   EXEC SQL DROP BUSDESC1;
   EXEC SQL DROP BUSDESC2;
END ";

"CREATE PROCEDURE CAMBIA_TIPO_CANXCAM_CELULAR (FECINI DATE, FECFIN DATE)
RETURNS (NENTRADA_Z INTEGER, ALM_Z VARCHAR(4), PTVTA_Z VARCHAR(4), CODIGO_Z VARCHAR(13), FOLSAL_Z INTEGER, FOLENT_Z INTEGER, NVAENT_Z INTEGER, NVPTVTA_Z VARCHAR(4))
BEGIN
   DECLARE FECHA_Z      DATE;
   DECLARE MES_Z        INTEGER;
   DECLARE ANU_Z        INTEGER;
   DECLARE CIA_Z        INTEGER;
   DECLARE ANTNTIP_Z    INTEGER;
   DECLARE NVONTIP_Z    INTEGER;
   DECLARE CANTI_Z      INTEGER;
   DECLARE ANTTIPO_Z    VARCHAR(1);
   DECLARE NVOTIPO_Z    VARCHAR(1);

   EXEC SQL PREPARE LEE_SABANA SELECT A.ALM, A.NUMERO, A.FECHA
      FROM ENTRADAS A WHERE A.TIPO='W' AND A.FECHA BETWEEN ? AND ? AND A.CIA=?;
   EXEC SQL PREPARE LEE_DATOS SELECT A.ALM,B.RECEMI, B.CODINV, FOLSAL, FOLENT
     FROM ENTRADAS A JOIN RENENTRA B ON A.TIPO = B.TIPO
     AND A.ALM = B.ALM AND A.NUMERO = B.NUMERO
     WHERE A.TIPO=? AND A.NUMERO=? AND A.ALM=?;
   EXEC SQL PREPARE UPDT_RENENTRA_SAL UPDATE RENENTRA SET TIPO=?, NUMERO=?, RECEMI=?
     WHERE TIPO=? AND ALM=? AND NUMERO=? AND CODINV=? AND FOLSAL=?;
   EXEC SQL PREPARE UPDT_RENENTRA_ENT UPDATE RENENTRA SET TIPO=?, NUMERO=?, RECEMI=?
     WHERE TIPO=? AND ALM=? AND NUMERO=? AND CODINV=? AND FOLENT=?;
   EXEC SQL PREPARE UPDT_ESTADIS CALL SUMA_ESTADIS(?, ?, ?,  ?, ?, ?, ?);
   EXEC SQL PREPARE UPDT_MOVART_SAL UPDATE MOVART SET NSALIDA=?, SALEPOR = ?, PTVTA=? WHERE ALMAC=? AND CODIGO=? AND FOLIO=?;
   EXEC SQL PREPARE UPDT_MOVART_ENT UPDATE MOVART SET NENTRADA=?, ENTRAPOR = ?  WHERE ALMAC=? AND CODIGO=? AND FOLIO=?;
   EXEC SQL PREPARE BUS_NSAL SELECT NUMERO FROM ENTRADAS WHERE TIPO=? AND ALM=? AND FECHA=? AND CIA=?;
   EXEC SQL PREPARE CREA_NSAL INSERT INTO ENTRADAS (TIPO, ALM, RECEMI, NUMERO,
      FECHA, CIA) VALUES ( ?, ?, ?, ?, ?, ?);
   EXEC SQL PREPARE BUS_ULTENT SELECT MAX(NUMERO) FROM ENTRADAS WHERE TIPO=? AND ALM=?;

   CIA_Z :=1;
   ANTNTIP_Z := 125;
   NVONTIP_Z := 65;
   ANTTIPO_Z := 'W';
   NVOTIPO_Z := 'X';

   EXEC SQL EXECUTE LEE_SABANA USING (FECINI, FECFIN, CIA_Z) INTO (ALM_Z, NENTRADA_Z, FECHA_Z);
   EXEC SQL FETCH LEE_SABANA;
   WHILE SQLSUCCESS LOOP
     MES_Z := MONTH(FECHA_Z);
     ANU_Z := YEAR(FECHA_Z);
     EXEC SQL EXECUTE BUS_NSAL USING (NVOTIPO_Z, ALM_Z, FECHA_Z, CIA_Z) INTO (NVAENT_Z);
     EXEC SQL FETCH BUS_NSAL;
     IF NVAENT_Z IS NULL THEN
       EXEC SQL EXECUTE BUS_ULTENT USING ( NVOTIPO_Z, ALM_Z) INTO (NVAENT_Z);
       EXEC SQL FETCH BUS_ULTENT;
       IF NVAENT_Z IS NULL THEN
         NVAENT_Z := 0;
       END IF
       NVAENT_Z := NVAENT_Z + 1;
       EXEC SQL EXECUTE CREA_NSAL USING ( NVOTIPO_Z, ALM_Z, ALM_Z, NVAENT_Z, FECHA_Z, CIA_Z);
     END IF
     EXEC SQL EXECUTE LEE_DATOS USING (ANTTIPO_Z, NENTRADA_Z, ALM_Z) INTO (ALM_Z, PTVTA_Z, CODIGO_Z, FOLSAL_Z, FOLENT_Z);
     EXEC SQL FETCH LEE_DATOS;
     WHILE SQLSUCCESS LOOP
       NVPTVTA_Z := SUBSTRING(PTVTA_Z, 3, 2);
       EXEC SQL EXECUTE UPDT_MOVART_SAL USING (NVAENT_Z, NVONTIP_Z, ALM_Z, NVPTVTA_Z, CODIGO_Z, FOLSAL_Z);
       EXEC SQL EXECUTE UPDT_MOVART_ENT USING (NVAENT_Z, NVONTIP_Z, ALM_Z, NVPTVTA_Z, CODIGO_Z, FOLENT_Z);
       EXEC SQL EXECUTE UPDT_RENENTRA_SAL USING (NVOTIPO_Z, NVAENT_Z, NVPTVTA_Z, ANTTIPO_Z, ALM_Z, NENTRADA_Z, CODIGO_Z, FOLSAL_Z);
       EXEC SQL EXECUTE UPDT_RENENTRA_ENT USING (NVOTIPO_Z, NVAENT_Z, NVPTVTA_Z, ANTTIPO_Z, ALM_Z, NENTRADA_Z, CODIGO_Z, FOLENT_Z);
       RETURN ROW;
       EXEC SQL FETCH LEE_DATOS;
     END LOOP;
     EXEC SQL FETCH LEE_SABANA;
   END LOOP;
   EXEC SQL DROP LEE_SABANA;
   EXEC SQL DROP LEE_DATOS;
   EXEC SQL DROP UPDT_RENENTRA_SAL;
   EXEC SQL DROP UPDT_RENENTRA_ENT;
   EXEC SQL DROP UPDT_ESTADIS;
   EXEC SQL DROP UPDT_MOVART_SAL;
   EXEC SQL DROP UPDT_MOVART_ENT;
   EXEC SQL DROP BUS_NSAL;
   EXEC SQL DROP CREA_NSAL;
   EXEC SQL DROP BUS_ULTENT;
END ";

"CREATE PROCEDURE CAMBIA_TIPO_SAL_CELULAR (FECINI DATE, FECFIN DATE)
RETURNS (NENTRADA_Z INTEGER, ALM_Z VARCHAR(4), PTVTA_Z VARCHAR(4), CODIGO_Z VARCHAR(13), FOLIO_Z INTEGER, NVAENT_Z INTEGER, NVPTVTA_Z VARCHAR(4))
BEGIN
   DECLARE FECHA_Z      DATE;
   DECLARE MES_Z        INTEGER;
   DECLARE ANU_Z        INTEGER;
   DECLARE CIA_Z        INTEGER;
   DECLARE ANTNTIP_Z    INTEGER;
   DECLARE NVONTIP_Z    INTEGER;
   DECLARE CANTI_Z      INTEGER;
   DECLARE ANTTIPO_Z    VARCHAR(1);
   DECLARE NVOTIPO_Z    VARCHAR(1);

   EXEC SQL PREPARE LEE_SABANA SELECT A.ALM, A.NUMERO, A.FECHA
      FROM ENTRADAS A WHERE A.TIPO='Q' AND A.FECHA BETWEEN ? AND ? AND A.CIA=?;
   EXEC SQL PREPARE LEE_DATOS SELECT A.ALM,B.RECEMI, B.CODINV, FOLSAL
     FROM ENTRADAS A JOIN RENENTRA B ON A.TIPO = B.TIPO
     AND A.ALM = B.ALM AND A.NUMERO = B.NUMERO
     WHERE A.TIPO=? AND A.NUMERO=? AND A.ALM=?;
   EXEC SQL PREPARE UPDT_RENENTRA UPDATE RENENTRA SET TIPO=?, NUMERO=?, RECEMI=?
     WHERE TIPO=? AND ALM=? AND NUMERO=? AND CODINV=? AND FOLSAL=?;
   EXEC SQL PREPARE UPDT_ESTADIS CALL SUMA_ESTADIS(?, ?, ?,  ?, ?, ?, ?);
   EXEC SQL PREPARE UPDT_MOVART UPDATE MOVART SET NSALIDA=?, SALEPOR = ?, PTVTA=? WHERE ALMAC=? AND CODIGO=? AND FOLIO=?;
   EXEC SQL PREPARE BUS_NSAL SELECT NUMERO FROM ENTRADAS WHERE TIPO=? AND ALM=? AND FECHA=? AND CIA=?;
   EXEC SQL PREPARE CREA_NSAL INSERT INTO ENTRADAS (TIPO, ALM, RECEMI, NUMERO,
      FECHA, CIA) VALUES ( ?, ?, ?, ?, ?, ?);
   EXEC SQL PREPARE BUS_ULTENT SELECT MAX(NUMERO) FROM ENTRADAS WHERE TIPO=? AND ALM=?;

   CIA_Z :=1;
   ANTNTIP_Z := 110;
   NVONTIP_Z := 20;
   ANTTIPO_Z := 'Q';
   NVOTIPO_Z := 'V';

   EXEC SQL EXECUTE LEE_SABANA USING (FECINI, FECFIN, CIA_Z) INTO (ALM_Z, NENTRADA_Z, FECHA_Z);
   EXEC SQL FETCH LEE_SABANA;
   WHILE SQLSUCCESS LOOP
     MES_Z := MONTH(FECHA_Z);
     ANU_Z := YEAR(FECHA_Z);
     EXEC SQL EXECUTE BUS_NSAL USING (NVOTIPO_Z, ALM_Z, FECHA_Z, CIA_Z) INTO (NVAENT_Z);
     EXEC SQL FETCH BUS_NSAL;
     IF NVAENT_Z IS NULL THEN
       EXEC SQL EXECUTE BUS_ULTENT USING ( NVOTIPO_Z, ALM_Z) INTO (NVAENT_Z);
       EXEC SQL FETCH BUS_ULTENT;
       IF NVAENT_Z IS NULL THEN
         NVAENT_Z := 0;
       END IF
       NVAENT_Z := NVAENT_Z + 1;
       EXEC SQL EXECUTE CREA_NSAL USING ( NVOTIPO_Z, ALM_Z, ALM_Z, NVAENT_Z, FECHA_Z, CIA_Z);
     END IF
     EXEC SQL EXECUTE LEE_DATOS USING (ANTTIPO_Z, NENTRADA_Z, ALM_Z) INTO (ALM_Z, PTVTA_Z, CODIGO_Z, FOLIO_Z);
     EXEC SQL FETCH LEE_DATOS;
     WHILE SQLSUCCESS LOOP
       NVPTVTA_Z := SUBSTRING(PTVTA_Z, 3, 2);
       EXEC SQL EXECUTE UPDT_MOVART USING (NVAENT_Z, NVONTIP_Z, NVPTVTA_Z, ALM_Z, CODIGO_Z, FOLIO_Z);
       EXEC SQL EXECUTE UPDT_RENENTRA USING (NVOTIPO_Z, NVAENT_Z, NVPTVTA_Z, ANTTIPO_Z, ALM_Z, NENTRADA_Z, CODIGO_Z, FOLIO_Z);
       CANTI_Z := -1;
       EXEC SQL EXECUTE UPDT_ESTADIS USING (ANTNTIP_Z, CODIGO_Z, PTVTA_Z, ANU_Z, MES_Z, CANTI_Z, CIA_Z);
       CANTI_Z := 1;
       EXEC SQL EXECUTE UPDT_ESTADIS USING (NVONTIP_Z, CODIGO_Z, NVPTVTA_Z, ANU_Z, MES_Z, CANTI_Z, CIA_Z);
       RETURN ROW;
       EXEC SQL FETCH LEE_DATOS;
     END LOOP;
     EXEC SQL FETCH LEE_SABANA;
   END LOOP;
   EXEC SQL DROP LEE_SABANA;
   EXEC SQL DROP LEE_DATOS;
   EXEC SQL DROP UPDT_RENENTRA;
   EXEC SQL DROP UPDT_ESTADIS;
   EXEC SQL DROP UPDT_MOVART;
   EXEC SQL DROP BUS_NSAL;
   EXEC SQL DROP CREA_NSAL;
   EXEC SQL DROP BUS_ULTENT;
END ";

"CREATE PROCEDURE CAMBIA_TIPO_SAL_FIDE
RETURNS (ALM_Z VARCHAR(4), CODIGO_Z VARCHAR(13), CUANTOS_Z INTEGER)
BEGIN
   EXEC SQL PREPARE LEE_DATOS SELECT A.ALM,CODINV,COUNT(*)
     FROM ENTRADAS A JOIN RENENTRA B ON A.TIPO = B.TIPO
     AND A.ALM = B.ALM AND A.NUMERO = B.NUMERO
     WHERE ( A.TIPO = 'Q' OR A.TIPO='H') AND B.STATUS = 'C'
     GROUP BY A.ALM, B.CODINV;
   EXEC SQL PREPARE UPDT_EXIS UPDATE EXIST SET SALESPS=SALESPS - ?, SALVTAS=SALVTAS + ?
     WHERE CODIGO=? AND ALM=?;
   EXEC SQL PREPARE UPDT_INVEN UPDATE INVEN SET SALESPS=SALESPS - ?, SALVTAS=SALVTAS + ?
     WHERE CODIGO=?;
   EXEC SQL EXECUTE LEE_DATOS INTO ( ALM_Z, CODIGO_Z, CUANTOS_Z);
   EXEC SQL FETCH LEE_DATOS;
   WHILE SQLSUCCESS LOOP
      EXEC SQL EXECUTE UPDT_EXIS USING (CUANTOS_Z, CUANTOS_Z, CODIGO_Z, ALM_Z);
      EXEC SQL EXECUTE UPDT_INVEN USING (CUANTOS_Z, CUANTOS_Z, CODIGO_Z);
      RETURN ROW;
      EXEC SQL FETCH LEE_DATOS;
   END LOOP;
   EXEC SQL DROP LEE_DATOS;
   EXEC SQL DROP UPDT_EXIS;
   EXEC SQL DROP UPDT_INVEN;
END ";

"CREATE PROCEDURE CAM_FECESTADIS (NTIPO_Z INTEGER, CODIGO_Z VARCHAR(13), ALM_Z VARCHAR(4), ANTANU_Z INTEGER, ANTMES_Z INTEGER, NVOANU_Z INTEGER, NVOMES_Z INTEGER, UNIDS_Z INTEGER, CIA_Z INTEGER)
RETURNS (COD_Z VARCHAR(13), NVOUNI_Z INTEGER, ANTUNI_Z INTEGER, OBS_Z VARCHAR(200))
BEGIN
  DECLARE EXISTIAN_Z       INTEGER;

  IF ( ANTANU_Z <> NVOANU_Z) OR (ANTMES_Z <> NVOMES_Z) THEN
    EXEC SQL PREPARE BUS_ESTADI SELECT CODIGO, UNIDADES FROM ESTADIS WHERE TIPO=? AND CODIGO=? AND ALM=? AND ANU=? AND MES=? AND CIA=?;
    EXEC SQL PREPARE BUS_NVAESTADI SELECT COUNT(*) FROM ESTADIS WHERE TIPO=? AND CODIGO=? AND ALM=? AND ANU=? AND MES=? AND CIA=?;
    EXEC SQL PREPARE INS_ESTADI INSERT INTO ESTADIS (TIPO,CODIGO,ALM,ANU,MES,
      UNIDADES,IMPORTE,CIA) VALUES (?,?,?,?,?,?,0,?);
    EXEC SQL PREPARE UPD_ESTADI UPDATE ESTADIS SET UNIDADES = UNIDADES + ?
      WHERE TIPO=? AND CODIGO=? AND ALM=? AND ANU=? AND MES=? AND CIA=?;
    EXEC SQL PREPARE UPD_ESTADI2 UPDATE ESTADIS SET UNIDADES = UNIDADES - ?
      WHERE TIPO=? AND CODIGO=? AND ALM=? AND ANU=? AND MES=? AND CIA=?;

    EXEC SQL EXECUTE BUS_ESTADI USING (NTIPO_Z, CODIGO_Z, ALM_Z, ANTANU_Z, ANTMES_Z, CIA_Z) INTO (COD_Z, ANTUNI_Z);
    EXEC SQL FETCH BUS_ESTADI;
    IF SQLSUCCESS = 1 THEN
      NVOUNI_Z := UNIDS_Z;
      EXEC SQL EXECUTE UPD_ESTADI2 USING (UNIDS_Z, NTIPO_Z, CODIGO_Z, ALM_Z, ANTANU_Z, ANTMES_Z, CIA_Z);
      EXEC SQL EXECUTE BUS_NVAESTADI USING (NTIPO_Z, CODIGO_Z, ALM_Z, NVOANU_Z, NVOMES_Z, CIA_Z) INTO (EXISTIAN_Z);
      EXEC SQL FETCH BUS_NVAESTADI;
      IF EXISTIAN_Z < 1 THEN
         EXEC SQL EXECUTE INS_ESTADI USING (NTIPO_Z, CODIGO_Z, ALM_Z, NVOANU_Z, NVOMES_Z, UNIDS_Z, CIA_Z);
         OBS_Z := 'No existen, se agregan';
         RETURN ROW;
      ELSE
         EXEC SQL EXECUTE UPD_ESTADI USING (UNIDS_Z, NTIPO_Z, CODIGO_Z, ALM_Z, NVOANU_Z, NVOMES_Z, CIA_Z);
         OBS_Z := 'Ya existen, se agregan ' + CONVERT_CHAR(EXISTIAN_Z);
         RETURN ROW;
      END IF
    END IF
    EXEC SQL DROP BUS_ESTADI;
    EXEC SQL DROP BUS_NVAESTADI;
    EXEC SQL DROP INS_ESTADI;
    EXEC SQL DROP UPD_ESTADI;
    EXEC SQL DROP UPD_ESTADI2;
  END IF
END
";

"CREATE PROCEDURE CAM_FECSAL (NTIPO_Z INTEGER, TIPO_Z VARCHAR(1), ALM_Z VARCHAR(4), NUMERO_Z INTEGER, NVAFECHA_Z DATE, CIA_Z INTEGER)
RETURNS (CODIGO_Z VARCHAR(13), FOLIO_Z INTEGER, ANTANU_Z INTEGER, ANTMES_Z INTEGER, NVOANU_Z INTEGER, NVOMES_Z INTEGER, MAYORIS_Z VARCHAR(4))
BEGIN
  DECLARE ANTFEC_Z      DATE;
  DECLARE CONSE_Z       INTEGER;
  DECLARE CANTI_Z       INTEGER;
  DECLARE PTOVTA_Z      VARCHAR(4);

  EXEC SQL PREPARE BUS_RENS SELECT CODINV, FOLSAL, CONSE, RECEMI FROM RENENTRA
    WHERE TIPO = ? AND ALM=? AND NUMERO = ? AND CIA=?;
  EXEC SQL PREPARE BUS_ANTFEC SELECT PROVE, FECHA, YEAR(FECHA), MONTH(FECHA)
    FROM ENTRADAS WHERE TIPO = ? AND ALM=? AND NUMERO = ? AND CIA=?;
  EXEC SQL PREPARE CAM_FECSALMV UPDATE MOVART SET FECHASAL = ?
    WHERE CODIGO=? AND ALMAC=? AND FOLIO=? AND CIA=?;
  EXEC SQL PREPARE CAM_FECSALEN UPDATE ENTRADAS SET FECHA=?
    WHERE TIPO = ? AND ALM=? AND NUMERO = ? AND CIA=?;
  EXEC SQL PREPARE CAM_ESTADI CALL CAM_FECESTADIS (?,?,?,?,?,?,?,?,?);
  CANTI_Z := 1;

  NVOANU_Z := YEAR(NVAFECHA_Z);
  NVOMES_Z := MONTH(NVAFECHA_Z);
  EXEC SQL EXECUTE BUS_ANTFEC USING (TIPO_Z, ALM_Z, NUMERO_Z, CIA_Z) INTO (MAYORIS_Z, ANTFEC_Z, ANTANU_Z, ANTMES_Z);
  EXEC SQL FETCH BUS_ANTFEC;
  WHILE SQLSUCCESS = 1 LOOP
    EXEC SQL EXECUTE BUS_RENS USING (TIPO_Z, ALM_Z, NUMERO_Z, CIA_Z) INTO (CODIGO_Z, FOLIO_Z, CONSE_Z, PTOVTA_Z);
    EXEC SQL FETCH BUS_RENS;
    WHILE SQLSUCCESS = 1 LOOP
      IF (TIPO_Z = 'V') OR (TIPO_Z = 'F') OR (TIPO_Z = 'H') THEN
         MAYORIS_Z := PTOVTA_Z;
      END IF
      EXEC SQL EXECUTE CAM_FECSALMV USING (NVAFECHA_Z, CODIGO_Z, ALM_Z, FOLIO_Z, CIA_Z);
      EXEC SQL EXECUTE CAM_ESTADI USING (NTIPO_Z, CODIGO_Z, MAYORIS_Z, ANTANU_Z, ANTMES_Z, NVOANU_Z, NVOMES_Z, CANTI_Z, CIA_Z);
      RETURN ROW;
      EXEC SQL FETCH BUS_RENS;
    END LOOP
    EXEC SQL EXECUTE CAM_FECSALEN USING (NVAFECHA_Z, TIPO_Z, ALM_Z, NUMERO_Z, CIA_Z);
    EXEC SQL FETCH BUS_ANTFEC;
  END LOOP
  EXEC SQL DROP BUS_RENS;
  EXEC SQL DROP BUS_ANTFEC;
  EXEC SQL DROP CAM_FECSALMV;
  EXEC SQL DROP CAM_FECSALEN;
  EXEC SQL DROP CAM_ESTADI;
END
";

"CREATE PROCEDURE CORRIGE_DESCRI
        RETURNS (IDART INTEGER, CODIGO VARCHAR(13), IDDESCRI INTEGER,
        ANTIDDESCRI INTEGER, DESCRI VARCHAR(60), CIA INTEGER)
BEGIN
	DECLARE ULTIMOID	      INTEGER;
   EXEC SQL PREPARE INVH_BUSCALAS SELECT LTRIM(RTRIM(CODIGO)), LTRIM(RTRIM(DESCRI)), CIA FROM INVEN;
   EXEC SQL PREPARE INVH_ULTIMOID SELECT MAX(IDART) FROM INV_INVHIST;
   EXEC SQL PREPARE INVH_BUSIDDES CALL BUSCONCEP(?);
	EXEC SQL PREPARE INVH_BUSCAMIART SELECT IDART, CODIGO, IDDESCRI, CIA FROM INV_INVHIST WHERE CODIGO = ? AND CIA=?;
	EXEC SQL PREPARE INVH_AGREGA INSERT INTO INV_INVHIST (IDART, CODIGO, IDDESCRI, CIA) VALUES (?, ?, ?, ?);
	EXEC SQL PREPARE INVH_MODIFICA UPDATE INV_INVHIST SET IDDESCRI=? WHERE IDART=?;
   EXEC SQL EXECUTE INVH_ULTIMOID INTO (ULTIMOID);
   EXEC SQL FETCH INVH_ULTIMOID;
   IF ULTIMOID IS NULL THEN
      ULTIMOID := 0;
   END IF
        
   EXEC SQL EXECUTE INVH_BUSCALAS INTO (CODIGO, DESCRI, CIA);
   EXEC SQL FETCH INVH_BUSCALAS;
   WHILE SQLSUCCESS LOOP
      EXEC SQL EXECUTE INVH_BUSIDDES USING (DESCRI) INTO (IDDESCRI);
      EXEC SQL FETCH INVH_BUSIDDES;
      IF IDDESCRI IS NULL THEN
         IDDESCRI := 0;
      END IF
      EXEC SQL EXECUTE INVH_BUSCAMIART USING (CODIGO, CIA) INTO (IDART, CODIGO, ANTIDDESCRI, CIA);
      EXEC SQL FETCH INVH_BUSCAMIART;
      IF NOT SQLSUCCESS THEN
         ULTIMOID := ULTIMOID + 1;
         IDART := ULTIMOID;
         EXEC SQL EXECUTE INVH_AGREGA USING (IDART, CODIGO, IDDESCRI, CIA);
         RETURN ROW;
      ELSE
         IF IDDESCRI <> IDDESCRI THEN
            EXEC SQL EXECUTE INVH_MODIFICA USING (IDDESCRI, IDART);
            RETURN ROW;
         END IF
      END IF
      RETURN ROW;
      EXEC SQL FETCH INVH_BUSCALAS;
   END LOOP;
   EXEC SQL DROP INVH_BUSCALAS;
   EXEC SQL DROP INVH_ULTIMOID;
   EXEC SQL DROP INVH_BUSCAMIART;
   EXEC SQL DROP INVH_BUSIDDES;
   EXEC SQL DROP INVH_AGREGA;
   EXEC SQL DROP INVH_MODIFICA;
END ";

"CREATE PROCEDURE GENERA_INVTMP
        RETURNS (CODIGO VARCHAR(13), FECHA DATE)
BEGIN

  EXEC SQL PREPARE INI_INVTMP DELETE FROM INVENTMP;
  EXEC SQL PREPARE INI_INVHISTTMP DELETE FROM INV_INVHISTTMP;
  EXEC SQL PREPARE INI_LINEASTMP DELETE FROM INV_LINEASTMP;
  EXEC SQL PREPARE INI_MARCASTMP DELETE FROM INV_MARCASTMP;
  EXEC SQL PREPARE INI_RELINVTMP DELETE FROM INV_RELINVTMP;
  EXEC SQL PREPARE REL_ACTIS SELECT B.CODIGO,A.FECHA
    FROM INV_CAMBIOS A JOIN INVEN B ON A.CODIGO = B.CODIGO
    WHERE A.FECHA BETWEEN TIMESTAMPADD(6, -1, NOW()) AND NOW();

  EXEC SQL PREPARE SEL_INVTMP INSERT INTO INVENTMP (CODIGO,COD2,
    DESCRI,TIPO,PROVE,LINEA,EMPAQE,MINIMO,MAXIMO,PRECIO,PIVA,COSTOS,COSTON,
    FECALTA,CIA,MDS,ELEC,PRECELEC) SELECT UNIQUE B.CODIGO,COD2,
    DESCRI,B.TIPO,PROVE,LINEA,EMPAQE,MINIMO,MAXIMO,PRECIO,PIVA,COSTOS,COSTON,
    FECALTA,CIA,MDS,ELEC,PRECELEC
    FROM INV_CAMBIOS A JOIN INVEN B ON A.CODIGO = B.CODIGO
    WHERE A.FECHA BETWEEN TIMESTAMPADD(6, -1, NOW()) AND NOW();
  EXEC SQL PREPARE SEL_LINEASTMP INSERT INTO INV_LINEASTMP (IDLINEA,LINEA,DESCRI,ORDEN,REGION,
    CIA) SELECT IDLINEA,LINEA,DESCRI,ORDEN,REGION, CIA FROM INV_LINEAS;
  EXEC SQL PREPARE SEL_MARCASTMP INSERT INTO INV_MARCASTMP (IDMARCAINV,CODIGO,MARCA)
    SELECT IDMARCAINV,CODIGO,MARCA FROM INV_MARCAS;
  EXEC SQL PREPARE SEL_INVHISTTMP INSERT INTO INV_INVHISTTMP (IDART,CODIGO,IDDESCRI,CIA)
    SELECT IDART,A.CODIGO,IDDESCRI,A.CIA FROM INVENTMP A JOIN INV_INVHIST B ON A.CODIGO = B.CODIGO AND A.CIA = B.CIA;
  EXEC SQL PREPARE SEL_RELINVTMP INSERT INTO INV_RELINVTMP (IDRELINV,IDART,IDREL,IDDATO,CONSE)
  SELECT IDRELINV,A.IDART,IDREL,IDDATO,CONSE
  FROM INV_INVHISTTMP A JOIN INV_RELINV B ON A.IDART = B.IDART;
  EXEC SQL EXECUTE INI_INVTMP;
  EXEC SQL EXECUTE INI_INVHISTTMP;
  EXEC SQL EXECUTE INI_LINEASTMP;
  EXEC SQL EXECUTE INI_MARCASTMP;
  EXEC SQL EXECUTE INI_RELINVTMP;
  EXEC SQL EXECUTE SEL_INVTMP;
  EXEC SQL EXECUTE SEL_LINEASTMP;
  EXEC SQL EXECUTE SEL_MARCASTMP;
  EXEC SQL EXECUTE SEL_INVHISTTMP;
  EXEC SQL EXECUTE SEL_RELINVTMP;
  EXEC SQL EXECUTE REL_ACTIS INTO (CODIGO, FECHA);
  EXEC SQL FETCH REL_ACTIS;
  WHILE SQLSUCCESS LOOP
    RETURN ROW;
    EXEC SQL FETCH REL_ACTIS;
  END LOOP;
END ";

"CREATE PROCEDURE KARDEX( IDART VARCHAR(13), IDALM VARCHAR(4), CIA SMALLINT )
RETURNS (
  CODIGO VARCHAR(13), FECHA DATE, FOLIO INTEGER, SERIE VARCHAR(20),
  ALM VARCHAR(4), COSTO FLOAT,
  PROVE VARCHAR(60), MODENT CHAR(1), NENTRADA INTEGER, COMPRA VARCHAR(60),
  FECSALE DATE, MODSAL CHAR(1)
)
BEGIN
  DECLARE IDSERIE INTEGER;
  DECLARE IDNOMPRO INTEGER;
  DECLARE FECSAL DATE;
  DECLARE IDCOMPRO INTEGER;
  DECLARE SALIO CHAR(1);
  DECLARE IDALMVIENE VARCHAR(4);
  DECLARE FOLVIENE INTEGER;
  DECLARE IDALMHACIA VARCHAR(4);
  DECLARE FOLREC INTEGER;
  DECLARE NOMBRE_COMPRA VARCHAR(60);
  DECLARE NOMBRE_PRO VARCHAR(60);
  DECLARE CVEALM_VIENE VARCHAR(4);

  EXEC SQL PREPARE SELEC_MOVART SELECT CODIGO, ALMAC, FECHA, FOLIO, SERIE, NOMPRO, 
	FECHASAL, NENTRADA, SALIO, VIENEDE, FOLVIENE, VAHACIA, FOLREC, MODENT, 
	COMPRO, MODSAL, COSTO
	FROM MOVART WHERE CODIGO = ? AND ALMAC = ? AND CIA=?
	ORDER BY FOLIO;
  EXEC SQL PREPARE SELEC_NOMALM SELECT CLAVE, NOMBRE FROM ALMACEN 
       WHERE CLAVE = ? AND CIA=?;
  EXEC SQL PREPARE SELEC_CONCEP SELECT CONCEPTO FROM CONCEPS WHERE NCON = ?;
  EXEC SQL EXECUTE SELEC_MOVART  USING (IDART, IDALM, CIA)
     INTO ( CODIGO, ALM, FECHA, FOLIO, SERIE, IDNOMPRO,  FECSAL, NENTRADA, 
     SALIO, IDALMVIENE, FOLVIENE, IDALMHACIA, FOLREC, MODENT, IDCOMPRO, MODSAL, COSTO);
  EXEC SQL FETCH SELEC_MOVART;
  WHILE SQLSUCCESS LOOP
    IF SALIO = 'S' THEN
      IF FOLREC > 0 THEN
        EXEC SQL EXECUTE SELEC_NOMALM USING (IDALMHACIA, CIA) 
             INTO (CVEALM_VIENE, NOMBRE_PRO);
        EXEC SQL FETCH SELEC_NOMALM;
        COMPRA := CVEALM_VIENE + ' ' + NOMBRE_PRO + ' ' + CONVERT_CHAR(FOLREC);
      ELSE
        EXEC SQL EXECUTE SELEC_CONCEP USING (IDCOMPRO) INTO (COMPRA);
        EXEC SQL FETCH SELEC_CONCEP;
      END IF
      FECSALE := FECSAL;

    ELSE
      COMPRA := NULL;
      FECSALE := NULL;
      MODSAL := NULL;
    END IF
    IF FOLVIENE > 0 THEN
      EXEC SQL EXECUTE SELEC_NOMALM USING (IDALMVIENE, CIA) 
           INTO (CVEALM_VIENE, NOMBRE_PRO);
      EXEC SQL FETCH SELEC_NOMALM;
      PROVE := CVEALM_VIENE + ' ' + NOMBRE_PRO + ' ' + CONVERT_CHAR(FOLVIENE);
    ELSE
      EXEC SQL EXECUTE SELEC_CONCEP USING (IDNOMPRO) INTO (PROVE);
      EXEC SQL FETCH SELEC_CONCEP;
    END IF
    RETURN ROW;
    EXEC SQL FETCH SELEC_MOVART;
  END LOOP;
END
";

"CREATE PROCEDURE KARDEXDISP( IDART VARCHAR(13), CIA SMALLINT )
RETURNS (
  CODIGO VARCHAR(13), FECHA DATE, FOLIO INTEGER, SERIE VARCHAR(20), 
  ALM VARCHAR(4), COSTO FLOAT,
  PROVE VARCHAR(60), MODENT CHAR(1), NENTRADA INTEGER, COMPRA VARCHAR(60), 
  FECSALE DATE, MODSAL CHAR(1), IDREG INTEGER
)
BEGIN
  DECLARE IDSERIE INTEGER;
  DECLARE IDNOMPRO INTEGER;
  DECLARE FECSAL DATE;
  DECLARE IDCOMPRO INTEGER;
  DECLARE SALIO CHAR(1);
  DECLARE IDALMVIENE VARCHAR(4);
  DECLARE FOLVIENE INTEGER;
  DECLARE IDALMHACIA VARCHAR(4);
  DECLARE FOLREC INTEGER;
  DECLARE NOMBRE_COMPRA VARCHAR(60);
  DECLARE NOMBRE_PRO VARCHAR(60);
  DECLARE CVEALM_VIENE VARCHAR(4);

  EXEC SQL PREPARE SELEC_MOVART SELECT CODIGO, ALMAC, FECHA, FOLIO, SERIE, NOMPRO, 
	FECHASAL, NENTRADA, SALIO, VIENEDE, FOLVIENE, VAHACIA, FOLREC, MODENT, 
	COMPRO, MODSAL, COSTO
	FROM MOVART WHERE CODIGO = ? AND CIA=? AND SALIO <> 'S'
	ORDER BY FECHA, ALMAC, FOLIO;
  EXEC SQL PREPARE SELEC_NOMALM SELECT CLAVE, NOMBRE FROM ALMACEN 
       WHERE CLAVE = ? AND CIA=?;
  EXEC SQL PREPARE SELEC_CONCEP SELECT CONCEPTO FROM CONCEPS WHERE NCON = ?;
  EXEC SQL EXECUTE SELEC_MOVART  USING (IDART, CIA) 
     INTO ( CODIGO, ALM, FECHA, FOLIO, SERIE, IDNOMPRO,  FECSAL, NENTRADA, 
     SALIO, IDALMVIENE, FOLVIENE, IDALMHACIA, FOLREC, MODENT, IDCOMPRO, MODSAL, COSTO);
  IDREG := 0;
  EXEC SQL FETCH SELEC_MOVART;
  WHILE SQLSUCCESS LOOP
    IF SALIO = 'S' THEN
      IF FOLREC > 0 THEN
        EXEC SQL EXECUTE SELEC_NOMALM USING (IDALMHACIA, CIA) 
             INTO (CVEALM_VIENE, NOMBRE_PRO);
        EXEC SQL FETCH SELEC_NOMALM;
        COMPRA := CVEALM_VIENE + ' ' + NOMBRE_PRO + ' ' + CONVERT_CHAR(FOLREC);
      ELSE
        EXEC SQL EXECUTE SELEC_CONCEP USING (IDCOMPRO) INTO (COMPRA);
        EXEC SQL FETCH SELEC_CONCEP;
      END IF
      FECSALE := FECSAL;

    ELSE
      COMPRA := NULL;
      FECSALE := NULL;
      MODSAL := NULL;
    END IF
    IF FOLVIENE > 0 THEN
      EXEC SQL EXECUTE SELEC_NOMALM USING (IDALMVIENE, CIA) 
           INTO (CVEALM_VIENE, NOMBRE_PRO);
      EXEC SQL FETCH SELEC_NOMALM;
      PROVE := CVEALM_VIENE + ' ' + NOMBRE_PRO + ' ' + CONVERT_CHAR(FOLVIENE);
    ELSE
      EXEC SQL EXECUTE SELEC_CONCEP USING (IDNOMPRO) INTO (PROVE);
      EXEC SQL FETCH SELEC_CONCEP;
    END IF
    IDREG := IDREG + 1;
    RETURN ROW;
    EXEC SQL FETCH SELEC_MOVART;
  END LOOP;
END
";

"CREATE PROCEDURE PONULTFOL
 RETURNS (NUMREGS INTEGER, ULTIFOL INTEGER, CODIGO VARCHAR(13), ALM VARCHAR(4))
BEGIN
  EXEC SQL PREPARE C1 SELECT COUNT(*) FROM EXIST;
  EXEC SQL PREPARE C2 SELECT UNIQUE CODIGO,ALMAC FROM MOVART;
  EXEC SQL PREPARE C3 SELECT MAX(FOLIO) FROM MOVART WHERE CODIGO=? AND ALMAC=?;
  EXEC SQL PREPARE C4 UPDATE EXIST SET ULTFOL=? WHERE CODIGO=? AND ALM=?;
  EXEC SQL EXECUTE C1 INTO (NUMREGS);
  EXEC SQL EXECUTE C2 INTO (CODIGO,ALM);
  EXEC SQL FETCH C1;
  WHILE NUMREGS > 0 LOOP
    EXEC SQL FETCH C2;
    EXEC SQL EXECUTE C3 USING (CODIGO,ALM) INTO (ULTIFOL);
    EXEC SQL FETCH C3;
    EXEC SQL EXECUTE C4 USING(ULTIFOL,CODIGO,ALM);
    RETURN ROW;
    NUMREGS:=NUMREGS-1;
  END LOOP;
END";

"CREATE PROCEDURE RECIBINVTMP
RETURNS ( CODIGO_Z VARCHAR(13), DESCRI_Z VARCHAR(30) )
BEGIN
  DECLARE IDMARCA_Z     INTEGER;
  DECLARE IDLINEA_Z     INTEGER;
  DECLARE IDDATO_Z      INTEGER;
  DECLARE IDART_Z       INTEGER;
  DECLARE CIA_Z         INTEGER;

  DECLARE REL_GRUPO     INTEGER;
  DECLARE REL_LINEA     INTEGER;
  DECLARE REL_SITUAC    INTEGER;
  DECLARE REL_GPODIA    INTEGER;
  DECLARE REL_MARCA     INTEGER;

  REL_GRUPO  :=  1;
  REL_LINEA  :=  3;
  REL_SITUAC :=  4;
  REL_GPODIA :=  5;
  REL_MARCA  :=  6;


  EXEC SQL PREPARE SEL_INVTMP SELECT CODIGO, DESCRI, CIA FROM INVENTMP ORDER BY CODIGO;
  EXEC SQL PREPARE BUS_INVEN SELECT CODIGO, DESCRI FROM INVEN WHERE CODIGO = ? AND CIA = ?;
  EXEC SQL PREPARE SEL_INVHISTTMP SELECT CODIGO, IDART FROM INV_INVHISTTMP WHERE CODIGO = ? AND CIA = ?;
  EXEC SQL PREPARE SEL_LINEASTMP SELECT IDLINEA FROM INV_LINEASTMP;
  EXEC SQL PREPARE SEL_MARCASTMP SELECT IDMARCAINV, CODIGO, MARCA FROM INV_MARCASTMP;
  EXEC SQL PREPARE SEL_RELINVTMP SELECT IDRELINV, IDART, IDREL, IDDATO, CONSE FROM INV_RELINVTMP WHERE IDART = ?;
  EXEC SQL PREPARE BUS_MARCA SELECT IDMARCAINV, CODIGO, MARCA FROM INV_MARCAS WHERE IDMARCAINV = ?;
  EXEC SQL PREPARE BUS_LINEA SELECT IDLINEA FROM INV_LINEAS WHERE IDLINEA = ?;
  EXEC SQL PREPARE BUS_INVHIST SELECT CODIGO, IDART FROM INV_INVHIST WHERE CODIGO = ? AND CIA = ?;
  EXEC SQL PREPARE BUS_RELINV SELECT IDRELINV, IDART, IDREL, IDDATO, CONSE FROM INV_RELINV WHERE IDART = ? AND IDREL = ?;
  EXEC SQL PREPARE INS_INVEN INSERT INTO INVEN (CODIGO, COD2, DESCRI, TIPO, PROVE, LINEA, EMPAQE,
    MINIMO, MAXIMO, PRECIO, PIVA, COSTOS, COSTON, FECALTA,
    CIA, MDS, ELEC, PRECELEC)
    SELECT CODIGO, COD2, DESCRI, TIPO, PROVE, LINEA, EMPAQE,
    MINIMO, MAXIMO, PRECIO, PIVA, COSTOS, COSTON, FECALTA,
    CIA, MDS, ELEC, PRECELEC FROM INVENTMP WHERE CODIGO = ? AND CIA = ?;
  EXEC SQL PREPARE INS_INVHIST INSERT INTO INV_INVHIST
    ( IDART, CODIGO, IDDESCRI, CIA )
    SELECT IDART, CODIGO, IDDESCRI, CIA
    FROM INV_INVHISTTMP WHERE CODIGO = ? AND CIA = ?;
  EXEC SQL PREPARE INS_LINEA INSERT INTO INV_LINEAS
    ( IDLINEA, LINEA, DESCRI, ORDEN, REGION, CIA )
    SELECT IDLINEA, LINEA, DESCRI, ORDEN, REGION, CIA FROM INV_LINEASTMP WHERE IDLINEA = ?;
  EXEC SQL PREPARE INS_MARCAS INSERT INTO INV_MARCAS
    ( IDMARCAINV, CODIGO, MARCA)
    SELECT IDMARCAINV, CODIGO, MARCA FROM INV_MARCASTMP WHERE IDMARCAINV = ?;
  EXEC SQL PREPARE INS_RELINV INSERT INTO INV_RELINV
    ( IDRELINV, IDART, IDREL, IDDATO, CONSE)
    SELECT C.IDRELINV, C.IDART, C.IDREL, C.IDDATO, C.CONSE
    FROM INVENTMP A JOIN INV_INVHIST B ON A.CODIGO = B.CODIGO AND A.CIA = B.CIA
    JOIN INV_RELINVTMP C ON B.IDART = C.IDART WHERE A.CODIGO = ? AND A.CIA = ?;
  EXEC SQL EXECUTE SEL_LINEASTMP INTO (IDLINEA_Z);
  EXEC SQL FETCH SEL_LINEASTMP;
  WHILE SQLSUCCESS LOOP
     EXEC SQL EXECUTE BUS_LINEA USING (IDLINEA_Z);
     EXEC SQL FETCH BUS_LINEA;
     IF NOT SQLSUCCESS THEN
        EXEC SQL EXECUTE INS_LINEA USING (IDLINEA_Z);
     END IF
     EXEC SQL FETCH SEL_LINEASTMP;
  END LOOP;
  EXEC SQL EXECUTE SEL_MARCASTMP INTO (IDMARCA_Z);
  EXEC SQL FETCH SEL_MARCASTMP;
  WHILE SQLSUCCESS LOOP
     EXEC SQL EXECUTE BUS_MARCA USING (IDMARCA_Z);
     EXEC SQL FETCH BUS_MARCA;
     IF NOT SQLSUCCESS THEN
        EXEC SQL EXECUTE INS_MARCAS USING (IDMARCA_Z);
     END IF
     EXEC SQL FETCH SEL_MARCASTMP;
  END LOOP;
  EXEC SQL EXECUTE SEL_INVTMP INTO (CODIGO_Z, DESCRI_Z, CIA_Z);
  EXEC SQL FETCH SEL_INVTMP;
  WHILE SQLSUCCESS LOOP
     EXEC SQL EXECUTE BUS_INVEN USING (CODIGO_Z, CIA_Z);
     EXEC SQL FETCH BUS_INVEN;
     IF NOT SQLSUCCESS THEN
        RETURN ROW;
        EXEC SQL EXECUTE INS_INVEN USING (CODIGO_Z, CIA_Z);
        EXEC SQL EXECUTE INS_INVHIST USING (CODIGO_Z, CIA_Z);
        EXEC SQL EXECUTE INS_RELINV USING (CODIGO_Z, CIA_Z);
     END IF
     EXEC SQL FETCH SEL_INVTMP;
  END LOOP;
END";

"CREATE PROCEDURE SUMA_ESTADIS (NTIPO_Z INTEGER, CODIGO_Z VARCHAR(13), ALM_Z VARCHAR(4), ANU_Z INTEGER, MES_Z INTEGER, UNIDS_Z INTEGER, CIA_Z INTEGER)
RETURNS (COD_Z VARCHAR(13), NVOUNI_Z INTEGER, ANTUNI_Z INTEGER, OBS_Z VARCHAR(200))
BEGIN
  DECLARE EXISTIAN_Z       INTEGER;
  DECLARE QUEDAN_Z         INTEGER;
  EXEC SQL PREPARE BUS_ESTADI SELECT CODIGO, UNIDADES FROM ESTADIS WHERE TIPO=? AND CODIGO=? AND ALM=? AND ANU=? AND MES=? AND CIA=?;
  EXEC SQL PREPARE INS_ESTADI INSERT INTO ESTADIS (TIPO,CODIGO,ALM,ANU,MES,
      UNIDADES,IMPORTE,CIA) VALUES (?,?,?,?,?,?,0,?);
    EXEC SQL PREPARE UPD_ESTADI UPDATE ESTADIS SET UNIDADES = UNIDADES + ?
      WHERE TIPO=? AND CODIGO=? AND ALM=? AND ANU=? AND MES=? AND CIA=?;
  EXEC SQL PREPARE BORRA_ESTADI DELETE FROM ESTADIS WHERE TIPO=? AND CODIGO=? AND ALM=? AND ANU=? AND MES=? AND CIA=?;
  EXEC SQL EXECUTE BUS_ESTADI USING (NTIPO_Z, CODIGO_Z, ALM_Z, ANU_Z, MES_Z, CIA_Z) INTO (COD_Z, ANTUNI_Z);
  EXEC SQL FETCH BUS_ESTADI;
  IF SQLSUCCESS = 1 THEN
    NVOUNI_Z := UNIDS_Z + ANTUNI_Z;
    IF NVOUNI_Z = 0 THEN
      EXEC SQL EXECUTE BORRA_ESTADI USING (NTIPO_Z, CODIGO_Z, ALM_Z, ANU_Z, MES_Z, CIA_Z);
     OBS_Z := 'Queda en cero, se elimina';
    ELSE
       EXEC SQL EXECUTE UPD_ESTADI USING (UNIDS_Z, NTIPO_Z, CODIGO_Z, ALM_Z, ANU_Z, MES_Z, CIA_Z);
       OBS_Z := 'Ya existe, se modifica';
    END IF
  ELSE
    EXEC SQL EXECUTE INS_ESTADI USING (NTIPO_Z, CODIGO_Z, ALM_Z, ANU_Z, MES_Z, UNIDS_Z, CIA_Z);
    COD_Z := CODIGO_Z;
    NVOUNI_Z := UNIDS_Z;
    ANTUNI_Z := 0;
    OBS_Z := 'No existen, se agregan';
  END IF
  RETURN ROW;
  EXEC SQL DROP BUS_ESTADI;
  EXEC SQL DROP INS_ESTADI;
  EXEC SQL DROP UPD_ESTADI;
  EXEC SQL DROP BORRA_ESTADI;
END
";

"CREATE PROCEDURE TOMA_ARTDESP
        RETURNS (GRUPO VARCHAR(13), IDGRUPO INTEGER, IDART INTEGER, IDZONA INTEGER, PERIO INTEGER, CANTI INTEGER)
BEGIN
	DECLARE ULTIMOID	INTEGER;
   DECLARE MES       INTEGER;
   DECLARE ANU       INTEGER;
   DECLARE IDLINEA   INTEGER;
   DECLARE CIA       INTEGER;
   DECLARE ZONA      VARCHAR(2);
   DECLARE LINEA     VARCHAR(4);
   DECLARE UNIDS     VARCHAR(60);
   EXEC SQL PREPARE GPOI_BUSCALAS SELECT GRUPO, ZONA, ANU, UNIDADES, CIA, LINEA FROM ANUARDES;
   EXEC SQL PREPARE GPOI_ULTIMOID SELECT MAX(IDARTDESP) FROM INV_ARTDESP;
   EXEC SQL PREPARE GPOI_BUSCAMIGPO SELECT IDGRUPO FROM INV_GRUPOS WHERE CODIGO = ? AND CIA=?;
   EXEC SQL PREPARE GPOI_BUSCAMILIN SELECT IDLINEA FROM INV_LINEAS WHERE LINEA = ? AND CIA=?;
   EXEC SQL PREPARE GPOI_AGREGA INSERT INTO INV_ARTDESP (IDARTDESP, IDART, IDLINEA, IDPTOVTA, IDZONA, IDGRUPO, PERIO, CANTI, CIA) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);

   EXEC SQL EXECUTE GPOI_ULTIMOID INTO (ULTIMOID);
   EXEC SQL FETCH GPOI_ULTIMOID;
   IF ULTIMOID IS NULL THEN
      ULTIMOID := 0;
   END IF
        
   EXEC SQL EXECUTE GPOI_BUSCALAS INTO (GRUPO, ZONA, ANU, UNIDS, CIA, LINEA);
   EXEC SQL FETCH GPOI_BUSCALAS;
   WHILE SQLSUCCESS LOOP
      EXEC SQL EXECUTE GPOI_BUSCAMIGPO USING (GRUPO, CIA) INTO (IDGRUPO);
      EXEC SQL FETCH GPOI_BUSCAMIGPO;
      IF NOT SQLSUCCESS THEN
         IDGRUPO := 0;
      END IF
      EXEC SQL EXECUTE GPOI_BUSCAMILIN USING (LINEA, CIA) INTO (IDLINEA);
      EXEC SQL FETCH GPOI_BUSCAMILIN;
      IF NOT SQLSUCCESS THEN
         IDLINEA := 0;
      END IF
      IDZONA := CONVERT_CHAR('0' + LTRIM(RTRIM(ZONA)));
      IDART  := 0;
      MES := 1;
      WHILE MES <= 12 LOOP
        PERIO := ANU * 100 + MES;
        CANTI := CONVERT_INTEGER ( '0' + LTRIM(RTRIM(SUBSTRING(UNIDS, MES*4 - 3, MES+3))));
        IF CANTI <> 0 THEN
           ULTIMOID := ULTIMOID + 1;
           EXEC SQL EXECUTE GPOI_AGREGA USING (ULTIMOID, IDART, IDLINEA, IDART, IDZONA, IDGRUPO, PERIO, CANTI, CIA);
           RETURN ROW;
        END IF
        MES := MES + 1;
      END LOOP
      EXEC SQL FETCH GPOI_BUSCALAS;
   END LOOP;
   EXEC SQL DROP GPOI_BUSCALAS;
   EXEC SQL DROP GPOI_ULTIMOID;
   EXEC SQL DROP GPOI_BUSCAMIGPO;
   EXEC SQL DROP GPOI_BUSCAMILIN;
   EXEC SQL DROP GPOI_AGREGA;
END ";

"CREATE PROCEDURE TOMA_GPOINV
        RETURNS (IDGRUPO INTEGER, CODIGO VARCHAR(13), DESCRI VARCHAR(30), IMPRI VARCHAR(1), CIA INTEGER)
BEGIN
	DECLARE ULTIMOID	INTEGER;
   EXEC SQL PREPARE GPOI_BUSCALAS SELECT GRUPO, DESCRI, IMPRI, CIA FROM GRUPOINV;
   EXEC SQL PREPARE GPOI_ULTIMOID SELECT MAX(IDGRUPO) FROM INV_GRUPOS;
	EXEC SQL PREPARE GPOI_BUSCAMIGPO SELECT IDGRUPO, CODIGO, DESCRI, IMPRI FROM INV_GRUPOS WHERE CODIGO = ? AND CIA=?;
	EXEC SQL PREPARE GPOI_AGREGA INSERT INTO INV_GRUPOS (IDGRUPO, CODIGO, DESCRI, IMPRI, CIA) VALUES (?, ?, ?, ?, ?);
   EXEC SQL EXECUTE GPOI_ULTIMOID INTO (ULTIMOID);
   EXEC SQL FETCH GPOI_ULTIMOID;
   IF ULTIMOID IS NULL THEN
      ULTIMOID := 0;
   END IF
        
   EXEC SQL EXECUTE GPOI_BUSCALAS INTO (CODIGO, DESCRI, IMPRI, CIA);
   EXEC SQL FETCH GPOI_BUSCALAS;
   WHILE SQLSUCCESS LOOP
      EXEC SQL EXECUTE GPOI_BUSCAMIGPO USING (CODIGO, CIA) INTO (IDGRUPO, CODIGO, DESCRI, IMPRI, CIA);
      EXEC SQL FETCH GPOI_BUSCAMIGPO;
      IF NOT SQLSUCCESS THEN
         ULTIMOID := ULTIMOID + 1;
         IDGRUPO := ULTIMOID;
         EXEC SQL EXECUTE GPOI_AGREGA USING (IDGRUPO, CODIGO, DESCRI, IMPRI, CIA);
      END IF
      RETURN ROW;
      EXEC SQL FETCH GPOI_BUSCALAS;
   END LOOP;
   EXEC SQL DROP GPOI_BUSCALAS;
   EXEC SQL DROP GPOI_ULTIMOID;
   EXEC SQL DROP GPOI_BUSCAMIGPO;
   EXEC SQL DROP GPOI_AGREGA;
END ";

"CREATE PROCEDURE TOMA_INVHIS
        RETURNS (IDART INTEGER, CODIGO VARCHAR(13), IDDESCRI INTEGER,
        DESCRI VARCHAR(60), CIA INTEGER)
BEGIN
	DECLARE ULTIMOID	INTEGER;
   EXEC SQL PREPARE INVH_BUSCALAS SELECT LTRIM(RTRIM(CODIGO)), LTRIM(RTRIM(DESCRI)), CIA FROM INVEN;
   EXEC SQL PREPARE INVH_ULTIMOID SELECT MAX(IDART) FROM INV_INVHIST;
   EXEC SQL PREPARE INVH_BUSIDDES CALL BUSCONCEP(?);
	EXEC SQL PREPARE INVH_BUSCAMIART SELECT IDART, CODIGO, IDDESCRI, CIA FROM INV_INVHIST WHERE CODIGO = ? AND CIA=?;
	EXEC SQL PREPARE INVH_AGREGA INSERT INTO INV_INVHIST (IDART, CODIGO, IDDESCRI, CIA) VALUES (?, ?, ?, ?);
   EXEC SQL EXECUTE INVH_ULTIMOID INTO (ULTIMOID);
   EXEC SQL FETCH INVH_ULTIMOID;
   IF ULTIMOID IS NULL THEN
      ULTIMOID := 0;
   END IF
        
   EXEC SQL EXECUTE INVH_BUSCALAS INTO (CODIGO, DESCRI, CIA);
   EXEC SQL FETCH INVH_BUSCALAS;
   WHILE SQLSUCCESS LOOP
      EXEC SQL EXECUTE INVH_BUSCAMIART USING (CODIGO, CIA) INTO (IDART, CODIGO, IDDESCRI, CIA);
      EXEC SQL FETCH INVH_BUSCAMIART;
      IF NOT SQLSUCCESS THEN
         ULTIMOID := ULTIMOID + 1;
         IDART := ULTIMOID;
         EXEC SQL EXECUTE INVH_BUSIDDES USING (DESCRI) INTO (IDDESCRI);
         EXEC SQL FETCH INVH_BUSIDDES;
         IF IDDESCRI IS NULL THEN
            IDDESCRI := 0;
         END IF
         EXEC SQL EXECUTE INVH_AGREGA USING (IDART, CODIGO, IDDESCRI, CIA);
      END IF
      RETURN ROW;
      EXEC SQL FETCH INVH_BUSCALAS;
   END LOOP;
   EXEC SQL DROP INVH_BUSCALAS;
   EXEC SQL DROP INVH_ULTIMOID;
   EXEC SQL DROP INVH_BUSCAMIART;
   EXEC SQL DROP INVH_BUSIDDES;
   EXEC SQL DROP INVH_AGREGA;
END ";

"CREATE PROCEDURE TOMA_MARCAS
        RETURNS (IDMARCAINV INTEGER, CODIGO VARCHAR(4), MARCA VARCHAR(30))
BEGIN
	DECLARE ULTIMOID	INTEGER;
   EXEC SQL PREPARE MCA_BUSCALAS SELECT LTRIM(RTRIM(CODMARCA)), LTRIM(RTRIM(DESMARCA)) FROM MARCAS;
   EXEC SQL PREPARE MCA_ULTIMOID SELECT MAX(IDMARCAINV) FROM INV_MARCAS;
	EXEC SQL PREPARE MCA_BUSCAMIMCA SELECT IDMARCAINV, CODIGO, MARCA FROM INV_MARCAS WHERE CODIGO = ?;
	EXEC SQL PREPARE MCA_AGREGA INSERT INTO INV_MARCAS (IDMARCAINV,CODIGO, MARCA) VALUES (?, ?, ?);
   EXEC SQL EXECUTE MCA_ULTIMOID INTO (ULTIMOID);
   EXEC SQL FETCH MCA_ULTIMOID;
   IF ULTIMOID IS NULL THEN
      ULTIMOID := 0;
   END IF
        
   EXEC SQL EXECUTE MCA_BUSCALAS INTO (CODIGO, MARCA);
   EXEC SQL FETCH MCA_BUSCALAS;
   WHILE SQLSUCCESS LOOP
      EXEC SQL EXECUTE MCA_BUSCAMIMCA USING (CODIGO) INTO (IDMARCAINV, CODIGO, MARCA);
      EXEC SQL FETCH MCA_BUSCAMIMCA;
      IF NOT SQLSUCCESS THEN
         ULTIMOID := ULTIMOID + 1;
         IDMARCAINV := ULTIMOID;
         EXEC SQL EXECUTE MCA_AGREGA USING (IDMARCAINV, CODIGO, MARCA);
      END IF
      RETURN ROW;
      EXEC SQL FETCH MCA_BUSCALAS;
   END LOOP;
   EXEC SQL DROP MCA_BUSCALAS;
   EXEC SQL DROP MCA_ULTIMOID;
   EXEC SQL DROP MCA_BUSCAMIMCA;
   EXEC SQL DROP MCA_AGREGA;
END ";

"CREATE PROCEDURE TOMA_RELINV
        RETURNS (IDRELINV INTEGER, IDART INTEGER, CODIGO VARCHAR(13),
        RELAC VARCHAR(10), IDREL INTEGER, IDDATO INTEGER)
BEGIN
	DECLARE ULTIMOID	INTEGER;
   EXEC SQL PREPARE REL_GRUPOS SELECT B.IDART, B.CODIGO, 1 AS IDREL, C.IDGRUPO AS IDDATO
    FROM INVEN A JOIN INV_INVHIST B ON A.CODIGO = B.CODIGO AND A.CIA = B.CIA
    JOIN INV_GRUPOS C ON A.COD2 = C.CODIGO;
   EXEC SQL PREPARE REL_LINEAS SELECT B.IDART, B.CODIGO, 3 AS IDREL, IDLINEA AS IDDATO
    FROM INVEN A JOIN INV_INVHIST B ON A.CODIGO = B.CODIGO AND A.CIA = B.CIA
    JOIN INV_LINEAS C ON A.LINEA = C.LINEA AND A.CIA = C.CIA;
   EXEC SQL PREPARE REL_SITUACS SELECT B.IDART, B.CODIGO, 4 AS IDREL, IDSITUAC AS IDDATO
    FROM INVEN A JOIN INV_INVHIST B ON A.CODIGO = B.CODIGO AND A.CIA = B.CIA
    JOIN INV_SITUACIONES C ON A.EMPAQE = C.SITUACION;
   EXEC SQL PREPARE REL_DIARYS SELECT B.IDART, B.CODIGO, 5 AS IDREL, IDGPODIARY AS IDDATO
    FROM INVEN A JOIN INV_INVHIST B ON A.CODIGO = B.CODIGO AND A.CIA = B.CIA
    JOIN RELGPODIARY C ON A.CODIGO = C.CODIGO AND A.CIA = C.CIA
    JOIN GPODIARY D ON C.GRUPO = D.GRUPO AND C.CIA = D.CIA;
   EXEC SQL PREPARE REL_MARCAS SELECT B.IDART, B.CODIGO, 6 AS IDREL, IDMARCAINV AS IDDATO
    FROM INVEN A JOIN INV_INVHIST B ON A.CODIGO = B.CODIGO AND A.CIA = B.CIA
    JOIN MARCART C ON A.CODIGO = C.CODART
    JOIN INV_MARCAS D ON C.CODMCA = D.CODIGO;
   EXEC SQL PREPARE REL_ULTIMOID SELECT MAX(IDRELINV) FROM INV_RELINV;
	EXEC SQL PREPARE REL_BUSCAMIREL SELECT IDRELINV, IDART, IDREL, IDDATO FROM INV_RELINV WHERE IDART = ? AND IDREL = ? AND IDDATO = ?;
	EXEC SQL PREPARE REL_AGREGA INSERT INTO INV_RELINV (IDRELINV, IDART, IDREL, IDDATO, CONSE) VALUES (?, ?, ?, ?, 1);
   EXEC SQL EXECUTE REL_ULTIMOID INTO (ULTIMOID);
   EXEC SQL FETCH REL_ULTIMOID;
   IF ULTIMOID IS NULL THEN
      ULTIMOID := 0;
   END IF
   RELAC := 'GRUPOINV';
   EXEC SQL EXECUTE REL_GRUPOS INTO (IDART, CODIGO, IDREL, IDDATO);
   EXEC SQL FETCH REL_GRUPOS;
   WHILE SQLSUCCESS LOOP
      EXEC SQL EXECUTE REL_BUSCAMIREL USING (IDART, IDREL, IDDATO) INTO (IDRELINV, IDART, IDREL, IDDATO);
      EXEC SQL FETCH REL_BUSCAMIREL;
      IF NOT SQLSUCCESS THEN
         ULTIMOID := ULTIMOID + 1;
         IDRELINV := ULTIMOID;
         EXEC SQL EXECUTE REL_AGREGA USING (IDRELINV, IDART, IDREL, IDDATO);
      END IF
      RETURN ROW;
      EXEC SQL FETCH REL_GRUPOS;
   END LOOP;
   RELAC := 'LINEAS';
   EXEC SQL EXECUTE REL_LINEAS INTO (IDART, CODIGO, IDREL, IDDATO);
   EXEC SQL FETCH REL_LINEAS;
   WHILE SQLSUCCESS LOOP
      EXEC SQL EXECUTE REL_BUSCAMIREL USING (IDART, IDREL, IDDATO) INTO (IDRELINV, IDART, IDREL, IDDATO);
      EXEC SQL FETCH REL_BUSCAMIREL;
      IF NOT SQLSUCCESS THEN
         ULTIMOID := ULTIMOID + 1;
         IDRELINV := ULTIMOID;
         EXEC SQL EXECUTE REL_AGREGA USING (IDRELINV, IDART, IDREL, IDDATO);
      END IF
      RETURN ROW;
      EXEC SQL FETCH REL_LINEAS;
   END LOOP;
   RELAC := 'SITUACIONES';
   EXEC SQL EXECUTE REL_SITUACS INTO (IDART, CODIGO, IDREL, IDDATO);
   EXEC SQL FETCH REL_SITUACS;
   WHILE SQLSUCCESS LOOP
      EXEC SQL EXECUTE REL_BUSCAMIREL USING (IDART, IDREL, IDDATO) INTO (IDRELINV, IDART, IDREL, IDDATO);
      EXEC SQL FETCH REL_BUSCAMIREL;
      IF NOT SQLSUCCESS THEN
         ULTIMOID := ULTIMOID + 1;
         IDRELINV := ULTIMOID;
         EXEC SQL EXECUTE REL_AGREGA USING (IDRELINV, IDART, IDREL, IDDATO);
      END IF
      RETURN ROW;
      EXEC SQL FETCH REL_SITUACS;
   END LOOP;
   RELAC := 'DIARY';
   EXEC SQL EXECUTE REL_DIARYS INTO (IDART, CODIGO, IDREL, IDDATO);
   EXEC SQL FETCH REL_DIARYS;
   WHILE SQLSUCCESS LOOP
      EXEC SQL EXECUTE REL_BUSCAMIREL USING (IDART, IDREL, IDDATO) INTO (IDRELINV, IDART, IDREL, IDDATO);
      EXEC SQL FETCH REL_BUSCAMIREL;
      IF NOT SQLSUCCESS THEN
         ULTIMOID := ULTIMOID + 1;
         IDRELINV := ULTIMOID;
         EXEC SQL EXECUTE REL_AGREGA USING (IDRELINV, IDART, IDREL, IDDATO);
      END IF
      RETURN ROW;
      EXEC SQL FETCH REL_DIARYS;
   END LOOP;
   RELAC := 'MARCAS';
   EXEC SQL EXECUTE REL_MARCAS INTO (IDART, CODIGO, IDREL, IDDATO);
   EXEC SQL FETCH REL_MARCAS;
   WHILE SQLSUCCESS LOOP
      EXEC SQL EXECUTE REL_BUSCAMIREL USING (IDART, IDREL, IDDATO) INTO (IDRELINV, IDART, IDREL, IDDATO);
      EXEC SQL FETCH REL_BUSCAMIREL;
      IF NOT SQLSUCCESS THEN
         ULTIMOID := ULTIMOID + 1;
         IDRELINV := ULTIMOID;
         EXEC SQL EXECUTE REL_AGREGA USING (IDRELINV, IDART, IDREL, IDDATO);
      END IF
      RETURN ROW;
      EXEC SQL FETCH REL_MARCAS;
   END LOOP;
   EXEC SQL DROP REL_GRUPOS;
   EXEC SQL DROP REL_LINEAS;
   EXEC SQL DROP REL_SITUACS;
   EXEC SQL DROP REL_DIARYS;
   EXEC SQL DROP REL_MARCAS;
   EXEC SQL DROP REL_ULTIMOID;
   EXEC SQL DROP REL_BUSCAMIREL;
   EXEC SQL DROP REL_AGREGA;
END ";

"CREATE PROCEDURE TOMA_REL_SITUAC
        RETURNS (IDRELINV INTEGER, IDART INTEGER, CODIGO VARCHAR(13),
        RELAC VARCHAR(10), IDREL INTEGER, IDDATO INTEGER, OBSER_Z VARCHAR(100))
BEGIN
	DECLARE ULTIMOID	INTEGER;
   DECLARE ANTIDDATO INTEGER;
   EXEC SQL PREPARE REL_SITUACS SELECT B.IDART, B.CODIGO, 4 AS IDREL, IDSITUAC AS IDDATO
    FROM INVEN A JOIN INV_INVHIST B ON A.CODIGO = B.CODIGO AND A.CIA = B.CIA
    JOIN INV_SITUACIONES C ON A.EMPAQE = C.SITUACION;
   EXEC SQL PREPARE REL_ULTIMOID SELECT MAX(IDRELINV) FROM INV_RELINV;
	EXEC SQL PREPARE REL_BUSCAMIREL SELECT IDRELINV, IDART, IDREL, IDDATO FROM INV_RELINV WHERE IDART = ? AND IDREL = ?;
	EXEC SQL PREPARE REL_AGREGA INSERT INTO INV_RELINV (IDRELINV, IDART, IDREL, IDDATO, CONSE) VALUES (?, ?, ?, ?, 1);
	EXEC SQL PREPARE REL_MODIFICA UPDATE INV_RELINV SET IDDATO=? WHERE IDRELINV=?;
   EXEC SQL EXECUTE REL_ULTIMOID INTO (ULTIMOID);
   EXEC SQL FETCH REL_ULTIMOID;
   IF ULTIMOID IS NULL THEN
      ULTIMOID := 0;
   END IF
   RELAC := 'SITUACIONES';
   EXEC SQL EXECUTE REL_SITUACS INTO (IDART, CODIGO, IDREL, IDDATO);
   EXEC SQL FETCH REL_SITUACS;
   WHILE SQLSUCCESS LOOP
      EXEC SQL EXECUTE REL_BUSCAMIREL USING (IDART, IDREL) INTO (IDRELINV, IDART, IDREL, ANTIDDATO);
      EXEC SQL FETCH REL_BUSCAMIREL;
      IF NOT SQLSUCCESS THEN
         ULTIMOID := ULTIMOID + 1;
         IDRELINV := ULTIMOID;
         EXEC SQL EXECUTE REL_AGREGA USING (IDRELINV, IDART, IDREL, IDDATO);
         OBSER_Z := 'Agregado';
         RETURN ROW;
      ELSE
        IF IDDATO <> ANTIDDATO THEN
          OBSER_Z := 'Modificado';
          EXEC SQL EXECUTE REL_MODIFICA USING (IDDATO, IDRELINV);
          RETURN ROW;
        END IF
      END IF
      EXEC SQL FETCH REL_SITUACS;
   END LOOP;
   EXEC SQL DROP REL_SITUACS;
   EXEC SQL DROP REL_ULTIMOID;
   EXEC SQL DROP REL_BUSCAMIREL;
   EXEC SQL DROP REL_AGREGA;
   EXEC SQL DROP REL_MODIFICA;
END ";

"CREATE PROCEDURE TOMA_SITUACIONES
        RETURNS (IDSITUAC INTEGER, SITUACION VARCHAR(15))
BEGIN
	DECLARE ULTIMOID	INTEGER;
   EXEC SQL PREPARE SIT_MISSITUAC SELECT UNIQUE RTRIM(LTRIM(EMPAQE)) FROM INVEN;
   EXEC SQL PREPARE SIT_ULTIMOID SELECT MAX(IDSITUAC) FROM INV_SITUACIONES;
	EXEC SQL PREPARE SIT_BUSCAMISIT SELECT IDSITUAC,SITUACION FROM INV_SITUACIONES WHERE SITUACION = ?;
	EXEC SQL PREPARE SIT_AGRESIT INSERT INTO INV_SITUACIONES (IDSITUAC,SITUACION) VALUES (?, ?);
   EXEC SQL EXECUTE SIT_ULTIMOID INTO (ULTIMOID);
   EXEC SQL FETCH SIT_ULTIMOID;
   IF ULTIMOID IS NULL THEN
          ULTIMOID := 0;
   END IF
        
   EXEC SQL EXECUTE SIT_MISSITUAC INTO (SITUACION);
   EXEC SQL FETCH SIT_MISSITUAC;
   WHILE SQLSUCCESS LOOP
      EXEC SQL EXECUTE SIT_BUSCAMISIT USING (SITUACION) INTO (IDSITUAC, SITUACION);
      EXEC SQL FETCH SIT_BUSCAMISIT;
      IF NOT SQLSUCCESS THEN
         ULTIMOID := ULTIMOID + 1;
         IDSITUAC := ULTIMOID;
         EXEC SQL EXECUTE SIT_AGRESIT USING (IDSITUAC, SITUACION);
      END IF
      RETURN ROW;
      EXEC SQL FETCH SIT_MISSITUAC;
   END LOOP;
   EXEC SQL DROP SIT_MISSITUAC;
   EXEC SQL DROP SIT_ULTIMOID;
   EXEC SQL DROP SIT_BUSCAMISIT;
   EXEC SQL DROP SIT_AGRESIT;
END ";

SET SCHEMA USER;

COMMIT WORK;
